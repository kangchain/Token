.code
  PUSH 60			contract BasicToken is ERC20Ba...
  PUSH 40			contract BasicToken is ERC20Ba...
  MSTORE 			contract BasicToken is ERC20Ba...
  CALLVALUE 			contract BasicToken is ERC20Ba...
  ISZERO 			contract BasicToken is ERC20Ba...
  PUSH [tag] 1			contract BasicToken is ERC20Ba...
  JUMPI 			contract BasicToken is ERC20Ba...
  PUSH 0			contract BasicToken is ERC20Ba...
  DUP1 			contract BasicToken is ERC20Ba...
  REVERT 			contract BasicToken is ERC20Ba...
tag 1			contract BasicToken is ERC20Ba...
  JUMPDEST 			contract BasicToken is ERC20Ba...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract BasicToken is ERC20Ba...
  DUP1 			contract BasicToken is ERC20Ba...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract BasicToken is ERC20Ba...
  PUSH 0			contract BasicToken is ERC20Ba...
  CODECOPY 			contract BasicToken is ERC20Ba...
  PUSH 0			contract BasicToken is ERC20Ba...
  RETURN 			contract BasicToken is ERC20Ba...
.data
  0:
    .code
      PUSH 60			contract BasicToken is ERC20Ba...
      PUSH 40			contract BasicToken is ERC20Ba...
      MSTORE 			contract BasicToken is ERC20Ba...
      PUSH 4			contract BasicToken is ERC20Ba...
      CALLDATASIZE 			contract BasicToken is ERC20Ba...
      LT 			contract BasicToken is ERC20Ba...
      PUSH [tag] 1			contract BasicToken is ERC20Ba...
      JUMPI 			contract BasicToken is ERC20Ba...
      PUSH 0			contract BasicToken is ERC20Ba...
      CALLDATALOAD 			contract BasicToken is ERC20Ba...
      PUSH 100000000000000000000000000000000000000000000000000000000			contract BasicToken is ERC20Ba...
      SWAP1 			contract BasicToken is ERC20Ba...
      DIV 			contract BasicToken is ERC20Ba...
      PUSH FFFFFFFF			contract BasicToken is ERC20Ba...
      AND 			contract BasicToken is ERC20Ba...
      DUP1 			contract BasicToken is ERC20Ba...
      PUSH 70A08231			contract BasicToken is ERC20Ba...
      EQ 			contract BasicToken is ERC20Ba...
      PUSH [tag] 2			contract BasicToken is ERC20Ba...
      JUMPI 			contract BasicToken is ERC20Ba...
      DUP1 			contract BasicToken is ERC20Ba...
      PUSH A9059CBB			contract BasicToken is ERC20Ba...
      EQ 			contract BasicToken is ERC20Ba...
      PUSH [tag] 3			contract BasicToken is ERC20Ba...
      JUMPI 			contract BasicToken is ERC20Ba...
    tag 1			contract BasicToken is ERC20Ba...
      JUMPDEST 			contract BasicToken is ERC20Ba...
      PUSH 0			contract BasicToken is ERC20Ba...
      DUP1 			contract BasicToken is ERC20Ba...
      REVERT 			contract BasicToken is ERC20Ba...
    tag 2			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      CALLVALUE 			function balanceOf(address _ow...
      ISZERO 			function balanceOf(address _ow...
      PUSH [tag] 4			function balanceOf(address _ow...
      JUMPI 			function balanceOf(address _ow...
      PUSH 0			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      REVERT 			function balanceOf(address _ow...
    tag 4			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH [tag] 5			function balanceOf(address _ow...
      PUSH 4			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      CALLDATALOAD 			function balanceOf(address _ow...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function balanceOf(address _ow...
      AND 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      PUSH 20			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      PUSH [tag] 6			function balanceOf(address _ow...
      JUMP 			function balanceOf(address _ow...
    tag 5			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH 40			function balanceOf(address _ow...
      MLOAD 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      DUP3 			function balanceOf(address _ow...
      DUP2 			function balanceOf(address _ow...
      MSTORE 			function balanceOf(address _ow...
      PUSH 20			function balanceOf(address _ow...
      ADD 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      PUSH 40			function balanceOf(address _ow...
      MLOAD 			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      SWAP2 			function balanceOf(address _ow...
      SUB 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      RETURN 			function balanceOf(address _ow...
    tag 3			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      CALLVALUE 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      PUSH [tag] 7			function transfer(address _to,...
      JUMPI 			function transfer(address _to,...
      PUSH 0			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      REVERT 			function transfer(address _to,...
    tag 7			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH [tag] 8			function transfer(address _to,...
      PUSH 4			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			function transfer(address _to,...
      AND 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      PUSH [tag] 9			function transfer(address _to,...
      JUMP 			function transfer(address _to,...
    tag 8			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 40			function transfer(address _to,...
      MLOAD 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      DUP3 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      DUP2 			function transfer(address _to,...
      MSTORE 			function transfer(address _to,...
      PUSH 20			function transfer(address _to,...
      ADD 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      PUSH 40			function transfer(address _to,...
      MLOAD 			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      SUB 			function transfer(address _to,...
      SWAP1 			function transfer(address _to,...
      RETURN 			function transfer(address _to,...
    tag 6			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH 0			uint256 balance
      DUP1 			balances
      PUSH 0			balances[_owner]
      DUP4 			_owner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
      AND 			balances[_owner]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_owner]
      AND 			balances[_owner]
      DUP2 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 20			balances[_owner]
      ADD 			balances[_owner]
      SWAP1 			balances[_owner]
      DUP2 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 20			balances[_owner]
      ADD 			balances[_owner]
      PUSH 0			balances[_owner]
      KECCAK256 			balances[_owner]
      SLOAD 			balances[_owner]
      SWAP1 			return balances[_owner]
      POP 			return balances[_owner]
      SWAP2 			function balanceOf(address _ow...
      SWAP1 			function balanceOf(address _ow...
      POP 			function balanceOf(address _ow...
      JUMP [out]			function balanceOf(address _ow...
    tag 9			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 0			bool
      DUP1 			0
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      DUP4 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			_to != address(0)
      AND 			_to != address(0)
      EQ 			_to != address(0)
      ISZERO 			_to != address(0)
      ISZERO 			require(_to != address(0))
      ISZERO 			require(_to != address(0))
      PUSH [tag] 12			require(_to != address(0))
      JUMPI 			require(_to != address(0))
      PUSH 0			require(_to != address(0))
      DUP1 			require(_to != address(0))
      REVERT 			require(_to != address(0))
    tag 12			require(_to != address(0))
      JUMPDEST 			require(_to != address(0))
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      DUP3 			_value
      GT 			_value <= balances[msg.sender]
      ISZERO 			_value <= balances[msg.sender]
      ISZERO 			require(_value <= balances[msg...
      ISZERO 			require(_value <= balances[msg...
      PUSH [tag] 13			require(_value <= balances[msg...
      JUMPI 			require(_value <= balances[msg...
      PUSH 0			require(_value <= balances[msg...
      DUP1 			require(_value <= balances[msg...
      REVERT 			require(_value <= balances[msg...
    tag 13			require(_value <= balances[msg...
      JUMPDEST 			require(_value <= balances[msg...
      PUSH [tag] 14			balances[msg.sender].sub(_valu...
      DUP3 			_value
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      PUSH [tag] 15			balances[msg.sender].sub
      SWAP1 			balances[msg.sender].sub
      SWAP2 			balances[msg.sender].sub(_valu...
      SWAP1 			balances[msg.sender].sub(_valu...
      PUSH FFFFFFFF			balances[msg.sender].sub(_valu...
      AND 			balances[msg.sender].sub(_valu...
      JUMP [in]			balances[msg.sender].sub(_valu...
    tag 14			balances[msg.sender].sub(_valu...
      JUMPDEST 			balances[msg.sender].sub(_valu...
      PUSH 0			balances
      DUP1 			balances[msg.sender]
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[msg.sender]
      AND 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      ADD 			balances[msg.sender]
      PUSH 0			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      DUP2 			balances[msg.sender] = balance...
      SWAP1 			balances[msg.sender] = balance...
      SSTORE 			balances[msg.sender] = balance...
      POP 			balances[msg.sender] = balance...
      PUSH [tag] 16			balances[_to].add(_value)
      DUP3 			_value
      PUSH 0			balances
      DUP1 			balances[_to]
      DUP7 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 17			balances[_to].add
      SWAP1 			balances[_to].add
      SWAP2 			balances[_to].add(_value)
      SWAP1 			balances[_to].add(_value)
      PUSH FFFFFFFF			balances[_to].add(_value)
      AND 			balances[_to].add(_value)
      JUMP [in]			balances[_to].add(_value)
    tag 16			balances[_to].add(_value)
      JUMPDEST 			balances[_to].add(_value)
      PUSH 0			balances
      DUP1 			balances[_to]
      DUP6 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      DUP3 			_to
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _val...
      AND 			Transfer(msg.sender, _to, _val...
      CALLER 			msg.sender
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			Transfer(msg.sender, _to, _val...
      AND 			Transfer(msg.sender, _to, _val...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(msg.sender, _to, _val...
      DUP5 			_value
      PUSH 40			Transfer(msg.sender, _to, _val...
      MLOAD 			Transfer(msg.sender, _to, _val...
      DUP1 			Transfer(msg.sender, _to, _val...
      DUP3 			Transfer(msg.sender, _to, _val...
      DUP2 			Transfer(msg.sender, _to, _val...
      MSTORE 			Transfer(msg.sender, _to, _val...
      PUSH 20			Transfer(msg.sender, _to, _val...
      ADD 			Transfer(msg.sender, _to, _val...
      SWAP2 			Transfer(msg.sender, _to, _val...
      POP 			Transfer(msg.sender, _to, _val...
      POP 			Transfer(msg.sender, _to, _val...
      PUSH 40			Transfer(msg.sender, _to, _val...
      MLOAD 			Transfer(msg.sender, _to, _val...
      DUP1 			Transfer(msg.sender, _to, _val...
      SWAP2 			Transfer(msg.sender, _to, _val...
      SUB 			Transfer(msg.sender, _to, _val...
      SWAP1 			Transfer(msg.sender, _to, _val...
      LOG3 			Transfer(msg.sender, _to, _val...
      PUSH 1			true
      SWAP1 			return true
      POP 			return true
      SWAP3 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      JUMP [out]			function transfer(address _to,...
    tag 15			function sub(uint256 a, uint25...
      JUMPDEST 			function sub(uint256 a, uint25...
      PUSH 0			uint256
      DUP3 			a
      DUP3 			b
      GT 			b <= a
      ISZERO 			b <= a
      ISZERO 			assert(b <= a)
      ISZERO 			assert(b <= a)
      PUSH [tag] 19			assert(b <= a)
      JUMPI 			assert(b <= a)
      INVALID 			assert(b <= a)
    tag 19			assert(b <= a)
      JUMPDEST 			assert(b <= a)
      DUP2 			b
      DUP4 			a
      SUB 			a - b
      SWAP1 			return a - b
      POP 			return a - b
      SWAP3 			function sub(uint256 a, uint25...
      SWAP2 			function sub(uint256 a, uint25...
      POP 			function sub(uint256 a, uint25...
      POP 			function sub(uint256 a, uint25...
      JUMP [out]			function sub(uint256 a, uint25...
    tag 17			function add(uint256 a, uint25...
      JUMPDEST 			function add(uint256 a, uint25...
      PUSH 0			uint256
      DUP1 			uint256 c
      DUP3 			b
      DUP5 			a
      ADD 			a + b
      SWAP1 			uint256 c = a + b
      POP 			uint256 c = a + b
      DUP4 			a
      DUP2 			c
      LT 			c >= a
      ISZERO 			c >= a
      ISZERO 			assert(c >= a)
      ISZERO 			assert(c >= a)
      PUSH [tag] 21			assert(c >= a)
      JUMPI 			assert(c >= a)
      INVALID 			assert(c >= a)
    tag 21			assert(c >= a)
      JUMPDEST 			assert(c >= a)
      DUP1 			c
      SWAP2 			return c
      POP 			return c
      POP 			function add(uint256 a, uint25...
      SWAP3 			function add(uint256 a, uint25...
      SWAP2 			function add(uint256 a, uint25...
      POP 			function add(uint256 a, uint25...
      POP 			function add(uint256 a, uint25...
      JUMP [out]			function add(uint256 a, uint25...
    .data
