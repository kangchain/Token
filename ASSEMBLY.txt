.code
  PUSH 60			contract KangChain is Pausable...
  PUSH 40			contract KangChain is Pausable...
  MSTORE 			contract KangChain is Pausable...
  PUSH 3			bool public paused = false
  DUP1 			bool public paused = false
  SLOAD 			bool public paused = false
  PUSH A0			
  PUSH 2			
  EXP 			
  PUSH FF			
  MUL 			
  NOT 			
  AND 			bool public paused = false
  SWAP1 			bool public paused = false
  SSTORE 			bool public paused = false
  PUSH 19D971E4FE8401E74000000			500000000 * decimalFactor
  PUSH 5			uint256 public totalSupply = 5...
  SSTORE 			uint256 public totalSupply = 5...
  CALLVALUE 			function KangChain() public {...
  ISZERO 			function KangChain() public {...
  PUSH [tag] 1			function KangChain() public {...
  JUMPI 			function KangChain() public {...
  PUSH 0			function KangChain() public {...
  DUP1 			function KangChain() public {...
  REVERT 			function KangChain() public {...
tag 1			function KangChain() public {...
  JUMPDEST 			function KangChain() public {...
  PUSH 2			owner
  DUP1 			owner = msg.sender
  SLOAD 			owner = msg.sender
  PUSH 1			
  PUSH A0			
  PUSH 2			
  EXP 			
  SUB 			
  CALLER 			msg.sender
  DUP2 			owner = msg.sender
  AND 			owner = msg.sender
  PUSH 1			
  PUSH A0			
  PUSH 2			
  EXP 			
  SUB 			
  NOT 			
  SWAP3 			owner = msg.sender
  DUP4 			owner = msg.sender
  AND 			owner = msg.sender
  DUP2 			owner = msg.sender
  OR 			owner = msg.sender
  SWAP4 			owner = msg.sender
  DUP5 			owner = msg.sender
  SWAP1 			owner = msg.sender
  SSTORE 			owner = msg.sender
  PUSH 3			admin
  DUP1 			admin = owner
  SLOAD 			admin = owner
  SWAP1 			admin = owner
  SWAP4 			admin = owner
  AND 			admin = owner
  SWAP4 			owner
  SWAP1 			owner
  SWAP2 			owner
  AND 			owner
  SWAP3 			admin = owner
  SWAP1 			admin = owner
  SWAP3 			admin = owner
  OR 			admin = owner
  SWAP1 			admin = owner
  SSTORE 			admin = owner
  PUSH 5			totalSupply
  SLOAD 			totalSupply
  PUSH 0			owner
  DUP3 			balances[msg.sender]
  DUP2 			balances[msg.sender]
  MSTORE 			balances[msg.sender]
  PUSH 20			balances[msg.sender]
  DUP2 			balances[msg.sender]
  SWAP1 			balances[msg.sender]
  MSTORE 			balances[msg.sender]
  PUSH 40			balances[msg.sender]
  DUP1 			balances[msg.sender]
  DUP3 			balances[msg.sender]
  KECCAK256 			balances[msg.sender]
  DUP4 			balances[msg.sender] = totalSu...
  SWAP1 			balances[msg.sender] = totalSu...
  SSTORE 			balances[msg.sender] = totalSu...
  SWAP1 			owner
  SWAP2 			owner
  PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(address (0x0), msg.se...
  SWAP2 			Transfer(address (0x0), msg.se...
  MLOAD 			Transfer(address (0x0), msg.se...
  SWAP1 			Transfer(address (0x0), msg.se...
  DUP2 			Transfer(address (0x0), msg.se...
  MSTORE 			Transfer(address (0x0), msg.se...
  PUSH 20			Transfer(address (0x0), msg.se...
  ADD 			Transfer(address (0x0), msg.se...
  PUSH 40			Transfer(address (0x0), msg.se...
  MLOAD 			Transfer(address (0x0), msg.se...
  DUP1 			Transfer(address (0x0), msg.se...
  SWAP2 			Transfer(address (0x0), msg.se...
  SUB 			Transfer(address (0x0), msg.se...
  SWAP1 			Transfer(address (0x0), msg.se...
  LOG3 			Transfer(address (0x0), msg.se...
  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000			contract KangChain is Pausable...
  DUP1 			contract KangChain is Pausable...
  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000			contract KangChain is Pausable...
  PUSH 0			contract KangChain is Pausable...
  CODECOPY 			contract KangChain is Pausable...
  PUSH 0			contract KangChain is Pausable...
  RETURN 			contract KangChain is Pausable...
.data
  0:
    .code
      PUSH 60			contract KangChain is Pausable...
      PUSH 40			contract KangChain is Pausable...
      MSTORE 			contract KangChain is Pausable...
      PUSH 4			contract KangChain is Pausable...
      CALLDATASIZE 			contract KangChain is Pausable...
      LT 			contract KangChain is Pausable...
      PUSH [tag] 1			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      PUSH FFFFFFFF			contract KangChain is Pausable...
      PUSH 100000000000000000000000000000000000000000000000000000000			contract KangChain is Pausable...
      PUSH 0			contract KangChain is Pausable...
      CALLDATALOAD 			contract KangChain is Pausable...
      DIV 			contract KangChain is Pausable...
      AND 			contract KangChain is Pausable...
      PUSH 6FDDE03			contract KangChain is Pausable...
      DUP2 			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 2			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 95EA7B3			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 3			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 18160DDD			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 4			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 23B872DD			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 5			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 266AA5F4			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 6			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 282D3FDF			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 7			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 313CE567			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 8			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 3B3E672F			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 9			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 41C0E1B5			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 10			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 5BE7CC16			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 11			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 5C975ABB			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 12			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 66188463			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 13			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 6B9DB4E6			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 14			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 6D6A6A4D			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 15			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 70A08231			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 16			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 8456CB59			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 17			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 8DA5CB5B			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 18			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH 95D89B41			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 19			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH A9059CBB			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 20			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH D73DD623			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 21			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH DD62ED3E			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 22			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH F2FDE38B			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 23			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      PUSH F851A440			contract KangChain is Pausable...
      EQ 			contract KangChain is Pausable...
      PUSH [tag] 24			contract KangChain is Pausable...
      JUMPI 			contract KangChain is Pausable...
    tag 1			contract KangChain is Pausable...
      JUMPDEST 			contract KangChain is Pausable...
      PUSH 0			contract KangChain is Pausable...
      DUP1 			contract KangChain is Pausable...
      REVERT 			contract KangChain is Pausable...
    tag 2			string  public  constant name ...
      JUMPDEST 			string  public  constant name ...
      CALLVALUE 			string  public  constant name ...
      ISZERO 			string  public  constant name ...
      PUSH [tag] 25			string  public  constant name ...
      JUMPI 			string  public  constant name ...
      PUSH 0			string  public  constant name ...
      DUP1 			string  public  constant name ...
      REVERT 			string  public  constant name ...
    tag 25			string  public  constant name ...
      JUMPDEST 			string  public  constant name ...
      PUSH [tag] 26			string  public  constant name ...
      PUSH [tag] 27			string  public  constant name ...
      JUMP 			string  public  constant name ...
    tag 26			string  public  constant name ...
      JUMPDEST 			string  public  constant name ...
      PUSH 40			string  public  constant name ...
      MLOAD 			string  public  constant name ...
      PUSH 20			string  public  constant name ...
      DUP1 			string  public  constant name ...
      DUP3 			string  public  constant name ...
      MSTORE 			string  public  constant name ...
      DUP2 			string  public  constant name ...
      SWAP1 			string  public  constant name ...
      DUP2 			string  public  constant name ...
      ADD 			string  public  constant name ...
      DUP4 			string  public  constant name ...
      DUP2 			string  public  constant name ...
      DUP2 			string  public  constant name ...
      MLOAD 			string  public  constant name ...
      DUP2 			string  public  constant name ...
      MSTORE 			string  public  constant name ...
      PUSH 20			string  public  constant name ...
      ADD 			string  public  constant name ...
      SWAP2 			string  public  constant name ...
      POP 			string  public  constant name ...
      DUP1 			string  public  constant name ...
      MLOAD 			string  public  constant name ...
      SWAP1 			string  public  constant name ...
      PUSH 20			string  public  constant name ...
      ADD 			string  public  constant name ...
      SWAP1 			string  public  constant name ...
      DUP1 			string  public  constant name ...
      DUP4 			string  public  constant name ...
      DUP4 			string  public  constant name ...
      PUSH 0			;
    tag 28			olidity ^0.4.18;\n
/**
 * @...
      JUMPDEST 			olidity ^0.4.18;\n
/**
 * @...
      DUP4 			 * 
      DUP2 			*
      LT 			\n/
      ISZERO 			olidity ^0.4.18;\n
/**
 * @...
      PUSH [tag] 29			olidity ^0.4.18;\n
/**
 * @...
      JUMPI 			olidity ^0.4.18;\n
/**
 * @...
      DUP1 			 
      DUP3 			ace
      ADD 			ter
      MLOAD 			C20 i
      DUP4 			ver
      DUP3 			ver
      ADD 			ver
      MSTORE 			impler
      PUSH 20			c
      ADD 			C20
      PUSH [tag] 28			olidity ^0.4.18;\n
/**
 * @...
      JUMP 			olidity ^0.4.18;\n
/**
 * @...
    tag 29			olidity ^0.4.18;\n
/**
 * @...
      JUMPDEST 			olidity ^0.4.18;\n
/**
 * @...
      POP 			ity ^0.4.18;\n
      POP 			gma solidity ^0.4.18;\n
/**...
      POP 			gma solidity ^0.4.18;\n
/**...
      POP 			gma solidity ^0.4.18;\n
/**...
      SWAP1 			gma solidity ^0.4.18;\n
/**...
      POP 			gma solidity ^0.4.18;\n
/**...
      SWAP1 			gma solidity ^0.4.18;\n
/**...
      DUP2 			gma solidity ^0.4.18;\n
/**...
      ADD 			gma solidity ^0.4.18;\n
/**...
      SWAP1 			gma solidity ^0.4.18;\n
/**...
      PUSH 1F			gma solidity ^0.4.18;\n
/**...
      AND 			gma solidity ^0.4.18;\n
/**...
      DUP1 			gma solidity ^0.4.18;\n
/**...
      ISZERO 			gma solidity ^0.4.18;\n
/**...
      PUSH [tag] 31			gma solidity ^0.4.18;\n
/**...
      JUMPI 			gma solidity ^0.4.18;\n
/**...
      DUP1 			gma solidity ^0.4.18;\n
/**...
      DUP3 			gma solidity ^0.4.18;\n
/**...
      SUB 			gma solidity ^0.4.18;\n
/**...
      DUP1 			gma solidity ^0.4.18;\n
/**...
      MLOAD 			gma solidity ^0.4.18;\n
/**...
      PUSH 1			gma solidity ^0.4.18;\n
/**...
      DUP4 			gma solidity ^0.4.18;\n
/**...
      PUSH 20			gma solidity ^0.4.18;\n
/**...
      SUB 			gma solidity ^0.4.18;\n
/**...
      PUSH 100			gma solidity ^0.4.18;\n
/**...
      EXP 			gma solidity ^0.4.18;\n
/**...
      SUB 			gma solidity ^0.4.18;\n
/**...
      NOT 			gma solidity ^0.4.18;\n
/**...
      AND 			gma solidity ^0.4.18;\n
/**...
      DUP2 			gma solidity ^0.4.18;\n
/**...
      MSTORE 			gma solidity ^0.4.18;\n
/**...
      PUSH 20			gma solidity ^0.4.18;\n
/**...
      ADD 			gma solidity ^0.4.18;\n
/**...
      SWAP2 			gma solidity ^0.4.18;\n
/**...
      POP 			gma solidity ^0.4.18;\n
/**...
    tag 31			gma solidity ^0.4.18;\n
/**...
      JUMPDEST 			gma solidity ^0.4.18;\n
/**...
      POP 			gma solidity ^0.4.18;\n
/**...
      SWAP3 			gma solidity ^0.4.18;\n
/**...
      POP 			gma solidity ^0.4.18;\n
/**...
      POP 			gma solidity ^0.4.18;\n
/**...
      POP 			gma solidity ^0.4.18;\n
/**...
      PUSH 40			gma solidity ^0.4.18;\n
/**...
      MLOAD 			gma solidity ^0.4.18;\n
/**...
      DUP1 			gma solidity ^0.4.18;\n
/**...
      SWAP2 			gma solidity ^0.4.18;\n
/**...
      SUB 			gma solidity ^0.4.18;\n
/**...
      SWAP1 			gma solidity ^0.4.18;\n
/**...
      RETURN 			gma solidity ^0.4.18;\n
/**...
    tag 3			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      CALLVALUE 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      PUSH [tag] 32			function approve(address _spen...
      JUMPI 			function approve(address _spen...
      PUSH 0			function approve(address _spen...
      DUP1 			function approve(address _spen...
      REVERT 			function approve(address _spen...
    tag 32			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH [tag] 33			function approve(address _spen...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			function approve(address _spen...
      CALLDATALOAD 			function approve(address _spen...
      AND 			function approve(address _spen...
      PUSH 24			function approve(address _spen...
      CALLDATALOAD 			function approve(address _spen...
      PUSH [tag] 34			function approve(address _spen...
      JUMP 			function approve(address _spen...
    tag 33			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 40			function approve(address _spen...
      MLOAD 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      ISZERO 			function approve(address _spen...
      DUP2 			function approve(address _spen...
      MSTORE 			function approve(address _spen...
      PUSH 20			function approve(address _spen...
      ADD 			function approve(address _spen...
      PUSH 40			function approve(address _spen...
      MLOAD 			function approve(address _spen...
      DUP1 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      SUB 			function approve(address _spen...
      SWAP1 			function approve(address _spen...
      RETURN 			function approve(address _spen...
    tag 4			uint256 public totalSupply = 5...
      JUMPDEST 			uint256 public totalSupply = 5...
      CALLVALUE 			uint256 public totalSupply = 5...
      ISZERO 			uint256 public totalSupply = 5...
      PUSH [tag] 35			uint256 public totalSupply = 5...
      JUMPI 			uint256 public totalSupply = 5...
      PUSH 0			uint256 public totalSupply = 5...
      DUP1 			uint256 public totalSupply = 5...
      REVERT 			uint256 public totalSupply = 5...
    tag 35			uint256 public totalSupply = 5...
      JUMPDEST 			uint256 public totalSupply = 5...
      PUSH [tag] 36			uint256 public totalSupply = 5...
      PUSH [tag] 37			uint256 public totalSupply = 5...
      JUMP 			uint256 public totalSupply = 5...
    tag 36			uint256 public totalSupply = 5...
      JUMPDEST 			uint256 public totalSupply = 5...
      PUSH 40			uint256 public totalSupply = 5...
      MLOAD 			uint256 public totalSupply = 5...
      SWAP1 			uint256 public totalSupply = 5...
      DUP2 			uint256 public totalSupply = 5...
      MSTORE 			uint256 public totalSupply = 5...
      PUSH 20			uint256 public totalSupply = 5...
      ADD 			uint256 public totalSupply = 5...
      PUSH 40			uint256 public totalSupply = 5...
      MLOAD 			uint256 public totalSupply = 5...
      DUP1 			uint256 public totalSupply = 5...
      SWAP2 			uint256 public totalSupply = 5...
      SUB 			uint256 public totalSupply = 5...
      SWAP1 			uint256 public totalSupply = 5...
      RETURN 			uint256 public totalSupply = 5...
    tag 5			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      CALLVALUE 			function transferFrom(address ...
      ISZERO 			function transferFrom(address ...
      PUSH [tag] 38			function transferFrom(address ...
      JUMPI 			function transferFrom(address ...
      PUSH 0			function transferFrom(address ...
      DUP1 			function transferFrom(address ...
      REVERT 			function transferFrom(address ...
    tag 38			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH [tag] 33			function transferFrom(address ...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      DUP2 			function transferFrom(address ...
      AND 			function transferFrom(address ...
      SWAP1 			function transferFrom(address ...
      PUSH 24			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      AND 			function transferFrom(address ...
      PUSH 44			function transferFrom(address ...
      CALLDATALOAD 			function transferFrom(address ...
      PUSH [tag] 40			function transferFrom(address ...
      JUMP 			function transferFrom(address ...
    tag 6			mapping (address => uint256) p...
      JUMPDEST 			mapping (address => uint256) p...
      CALLVALUE 			mapping (address => uint256) p...
      ISZERO 			mapping (address => uint256) p...
      PUSH [tag] 41			mapping (address => uint256) p...
      JUMPI 			mapping (address => uint256) p...
      PUSH 0			mapping (address => uint256) p...
      DUP1 			mapping (address => uint256) p...
      REVERT 			mapping (address => uint256) p...
    tag 41			mapping (address => uint256) p...
      JUMPDEST 			mapping (address => uint256) p...
      PUSH [tag] 36			mapping (address => uint256) p...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			mapping (address => uint256) p...
      CALLDATALOAD 			mapping (address => uint256) p...
      AND 			mapping (address => uint256) p...
      PUSH [tag] 43			mapping (address => uint256) p...
      JUMP 			mapping (address => uint256) p...
    tag 7			function lock(address _target,...
      JUMPDEST 			function lock(address _target,...
      CALLVALUE 			function lock(address _target,...
      ISZERO 			function lock(address _target,...
      PUSH [tag] 44			function lock(address _target,...
      JUMPI 			function lock(address _target,...
      PUSH 0			function lock(address _target,...
      DUP1 			function lock(address _target,...
      REVERT 			function lock(address _target,...
    tag 44			function lock(address _target,...
      JUMPDEST 			function lock(address _target,...
      PUSH [tag] 33			function lock(address _target,...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			function lock(address _target,...
      CALLDATALOAD 			function lock(address _target,...
      AND 			function lock(address _target,...
      PUSH 24			function lock(address _target,...
      CALLDATALOAD 			function lock(address _target,...
      PUSH [tag] 46			function lock(address _target,...
      JUMP 			function lock(address _target,...
    tag 8			uint8   public  constant decim...
      JUMPDEST 			uint8   public  constant decim...
      CALLVALUE 			uint8   public  constant decim...
      ISZERO 			uint8   public  constant decim...
      PUSH [tag] 47			uint8   public  constant decim...
      JUMPI 			uint8   public  constant decim...
      PUSH 0			uint8   public  constant decim...
      DUP1 			uint8   public  constant decim...
      REVERT 			uint8   public  constant decim...
    tag 47			uint8   public  constant decim...
      JUMPDEST 			uint8   public  constant decim...
      PUSH [tag] 48			uint8   public  constant decim...
      PUSH [tag] 49			uint8   public  constant decim...
      JUMP 			uint8   public  constant decim...
    tag 48			uint8   public  constant decim...
      JUMPDEST 			uint8   public  constant decim...
      PUSH 40			uint8   public  constant decim...
      MLOAD 			uint8   public  constant decim...
      PUSH FF			uint8   public  constant decim...
      SWAP1 			uint8   public  constant decim...
      SWAP2 			uint8   public  constant decim...
      AND 			uint8   public  constant decim...
      DUP2 			uint8   public  constant decim...
      MSTORE 			uint8   public  constant decim...
      PUSH 20			uint8   public  constant decim...
      ADD 			uint8   public  constant decim...
      PUSH 40			uint8   public  constant decim...
      MLOAD 			uint8   public  constant decim...
      DUP1 			uint8   public  constant decim...
      SWAP2 			uint8   public  constant decim...
      SUB 			uint8   public  constant decim...
      SWAP1 			uint8   public  constant decim...
      RETURN 			uint8   public  constant decim...
    tag 9			function transferBatch(address...
      JUMPDEST 			function transferBatch(address...
      CALLVALUE 			function transferBatch(address...
      ISZERO 			function transferBatch(address...
      PUSH [tag] 50			function transferBatch(address...
      JUMPI 			function transferBatch(address...
      PUSH 0			function transferBatch(address...
      DUP1 			function transferBatch(address...
      REVERT 			function transferBatch(address...
    tag 50			function transferBatch(address...
      JUMPDEST 			function transferBatch(address...
      PUSH [tag] 33			function transferBatch(address...
      PUSH 4			function transferBatch(address...
      PUSH 24			function transferBatch(address...
      DUP2 			function transferBatch(address...
      CALLDATALOAD 			function transferBatch(address...
      DUP2 			function transferBatch(address...
      DUP2 			function transferBatch(address...
      ADD 			function transferBatch(address...
      SWAP1 			function transferBatch(address...
      DUP4 			function transferBatch(address...
      ADD 			function transferBatch(address...
      CALLDATALOAD 			function transferBatch(address...
      DUP1 			function transferBatch(address...
      PUSH 20			function transferBatch(address...
      DUP2 			function transferBatch(address...
      DUP2 			function transferBatch(address...
      MUL 			function transferBatch(address...
      ADD 			function transferBatch(address...
      PUSH 40			function transferBatch(address...
      MLOAD 			function transferBatch(address...
      SWAP1 			function transferBatch(address...
      DUP2 			function transferBatch(address...
      ADD 			function transferBatch(address...
      PUSH 40			function transferBatch(address...
      MSTORE 			function transferBatch(address...
      DUP1 			function transferBatch(address...
      SWAP4 			function transferBatch(address...
      SWAP3 			function transferBatch(address...
      SWAP2 			function transferBatch(address...
      SWAP1 			function transferBatch(address...
      DUP2 			function transferBatch(address...
      DUP2 			function transferBatch(address...
      MSTORE 			function transferBatch(address...
      PUSH 20			function transferBatch(address...
      ADD 			function transferBatch(address...
      DUP4 			function transferBatch(address...
      DUP4 			function transferBatch(address...
      PUSH 20			function transferBatch(address...
      MUL 			function transferBatch(address...
      DUP1 			function transferBatch(address...
      DUP3 			function transferBatch(address...
      DUP5 			function transferBatch(address...
      CALLDATACOPY 			function transferBatch(address...
      DUP3 			function transferBatch(address...
      ADD 			function transferBatch(address...
      SWAP2 			function transferBatch(address...
      POP 			function transferBatch(address...
      POP 			function transferBatch(address...
      POP 			function transferBatch(address...
      POP 			function transferBatch(address...
      POP 			function transferBatch(address...
      POP 			function transferBatch(address...
      SWAP2 			function transferBatch(address...
      SWAP1 			function transferBatch(address...
      DUP1 			function transferBatch(address...
      CALLDATALOAD 			function transferBatch(address...
      SWAP1 			function transferBatch(address...
      PUSH 20			function transferBatch(address...
      ADD 			function transferBatch(address...
      SWAP1 			function transferBatch(address...
      DUP3 			function transferBatch(address...
      ADD 			function transferBatch(address...
      DUP1 			function transferBatch(address...
      CALLDATALOAD 			function transferBatch(address...
      SWAP1 			function transferBatch(address...
      PUSH 20			function transferBatch(address...
      ADD 			function transferBatch(address...
      SWAP1 			function transferBatch(address...
      DUP1 			function transferBatch(address...
      DUP1 			function transferBatch(address...
      PUSH 20			function transferBatch(address...
      MUL 			function transferBatch(address...
      PUSH 20			function transferBatch(address...
      ADD 			function transferBatch(address...
      PUSH 40			function transferBatch(address...
      MLOAD 			function transferBatch(address...
      SWAP1 			function transferBatch(address...
      DUP2 			function transferBatch(address...
      ADD 			function transferBatch(address...
      PUSH 40			function transferBatch(address...
      MSTORE 			function transferBatch(address...
      DUP1 			function transferBatch(address...
      SWAP4 			function transferBatch(address...
      SWAP3 			function transferBatch(address...
      SWAP2 			function transferBatch(address...
      SWAP1 			function transferBatch(address...
      DUP2 			function transferBatch(address...
      DUP2 			function transferBatch(address...
      MSTORE 			function transferBatch(address...
      PUSH 20			function transferBatch(address...
      ADD 			function transferBatch(address...
      DUP4 			function transferBatch(address...
      DUP4 			function transferBatch(address...
      PUSH 20			function transferBatch(address...
      MUL 			function transferBatch(address...
      DUP1 			function transferBatch(address...
      DUP3 			function transferBatch(address...
      DUP5 			function transferBatch(address...
      CALLDATACOPY 			function transferBatch(address...
      POP 			
      SWAP5 			function transferBatch(address...
      SWAP7 			function transferBatch(address...
      POP 			
      PUSH [tag] 52			function transferBatch(address...
      SWAP6 			function transferBatch(address...
      POP 			
      POP 			
      POP 			
      POP 			
      POP 			
      POP 			
      JUMP 			function transferBatch(address...
    tag 10			function kill() public onlyOwn...
      JUMPDEST 			function kill() public onlyOwn...
      CALLVALUE 			function kill() public onlyOwn...
      ISZERO 			function kill() public onlyOwn...
      PUSH [tag] 53			function kill() public onlyOwn...
      JUMPI 			function kill() public onlyOwn...
      PUSH 0			function kill() public onlyOwn...
      DUP1 			function kill() public onlyOwn...
      REVERT 			function kill() public onlyOwn...
    tag 53			function kill() public onlyOwn...
      JUMPDEST 			function kill() public onlyOwn...
      PUSH [tag] 54			function kill() public onlyOwn...
      PUSH [tag] 55			function kill() public onlyOwn...
      JUMP 			function kill() public onlyOwn...
    tag 54			function kill() public onlyOwn...
      JUMPDEST 			function kill() public onlyOwn...
      STOP 			function kill() public onlyOwn...
    tag 11			function transferAdminship(add...
      JUMPDEST 			function transferAdminship(add...
      CALLVALUE 			function transferAdminship(add...
      ISZERO 			function transferAdminship(add...
      PUSH [tag] 56			function transferAdminship(add...
      JUMPI 			function transferAdminship(add...
      PUSH 0			function transferAdminship(add...
      DUP1 			function transferAdminship(add...
      REVERT 			function transferAdminship(add...
    tag 56			function transferAdminship(add...
      JUMPDEST 			function transferAdminship(add...
      PUSH [tag] 54			function transferAdminship(add...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			function transferAdminship(add...
      CALLDATALOAD 			function transferAdminship(add...
      AND 			function transferAdminship(add...
      PUSH [tag] 58			function transferAdminship(add...
      JUMP 			function transferAdminship(add...
    tag 12			bool public paused = false
      JUMPDEST 			bool public paused = false
      CALLVALUE 			bool public paused = false
      ISZERO 			bool public paused = false
      PUSH [tag] 59			bool public paused = false
      JUMPI 			bool public paused = false
      PUSH 0			bool public paused = false
      DUP1 			bool public paused = false
      REVERT 			bool public paused = false
    tag 59			bool public paused = false
      JUMPDEST 			bool public paused = false
      PUSH [tag] 33			bool public paused = false
      PUSH [tag] 61			bool public paused = false
      JUMP 			bool public paused = false
    tag 13			function decreaseApproval(addr...
      JUMPDEST 			function decreaseApproval(addr...
      CALLVALUE 			function decreaseApproval(addr...
      ISZERO 			function decreaseApproval(addr...
      PUSH [tag] 62			function decreaseApproval(addr...
      JUMPI 			function decreaseApproval(addr...
      PUSH 0			function decreaseApproval(addr...
      DUP1 			function decreaseApproval(addr...
      REVERT 			function decreaseApproval(addr...
    tag 62			function decreaseApproval(addr...
      JUMPDEST 			function decreaseApproval(addr...
      PUSH [tag] 33			function decreaseApproval(addr...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			function decreaseApproval(addr...
      CALLDATALOAD 			function decreaseApproval(addr...
      AND 			function decreaseApproval(addr...
      PUSH 24			function decreaseApproval(addr...
      CALLDATALOAD 			function decreaseApproval(addr...
      PUSH [tag] 64			function decreaseApproval(addr...
      JUMP 			function decreaseApproval(addr...
    tag 14			function getLock(address _targ...
      JUMPDEST 			function getLock(address _targ...
      CALLVALUE 			function getLock(address _targ...
      ISZERO 			function getLock(address _targ...
      PUSH [tag] 65			function getLock(address _targ...
      JUMPI 			function getLock(address _targ...
      PUSH 0			function getLock(address _targ...
      DUP1 			function getLock(address _targ...
      REVERT 			function getLock(address _targ...
    tag 65			function getLock(address _targ...
      JUMPDEST 			function getLock(address _targ...
      PUSH [tag] 36			function getLock(address _targ...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			function getLock(address _targ...
      CALLDATALOAD 			function getLock(address _targ...
      AND 			function getLock(address _targ...
      PUSH [tag] 67			function getLock(address _targ...
      JUMP 			function getLock(address _targ...
    tag 15			uint256 public constant decima...
      JUMPDEST 			uint256 public constant decima...
      CALLVALUE 			uint256 public constant decima...
      ISZERO 			uint256 public constant decima...
      PUSH [tag] 68			uint256 public constant decima...
      JUMPI 			uint256 public constant decima...
      PUSH 0			uint256 public constant decima...
      DUP1 			uint256 public constant decima...
      REVERT 			uint256 public constant decima...
    tag 68			uint256 public constant decima...
      JUMPDEST 			uint256 public constant decima...
      PUSH [tag] 36			uint256 public constant decima...
      PUSH [tag] 70			uint256 public constant decima...
      JUMP 			uint256 public constant decima...
    tag 16			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      CALLVALUE 			function balanceOf(address _ow...
      ISZERO 			function balanceOf(address _ow...
      PUSH [tag] 71			function balanceOf(address _ow...
      JUMPI 			function balanceOf(address _ow...
      PUSH 0			function balanceOf(address _ow...
      DUP1 			function balanceOf(address _ow...
      REVERT 			function balanceOf(address _ow...
    tag 71			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH [tag] 36			function balanceOf(address _ow...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			function balanceOf(address _ow...
      CALLDATALOAD 			function balanceOf(address _ow...
      AND 			function balanceOf(address _ow...
      PUSH [tag] 73			function balanceOf(address _ow...
      JUMP 			function balanceOf(address _ow...
    tag 17			function pause() onlyOwner pub...
      JUMPDEST 			function pause() onlyOwner pub...
      CALLVALUE 			function pause() onlyOwner pub...
      ISZERO 			function pause() onlyOwner pub...
      PUSH [tag] 74			function pause() onlyOwner pub...
      JUMPI 			function pause() onlyOwner pub...
      PUSH 0			function pause() onlyOwner pub...
      DUP1 			function pause() onlyOwner pub...
      REVERT 			function pause() onlyOwner pub...
    tag 74			function pause() onlyOwner pub...
      JUMPDEST 			function pause() onlyOwner pub...
      PUSH [tag] 54			function pause() onlyOwner pub...
      PUSH [tag] 76			function pause() onlyOwner pub...
      JUMP 			function pause() onlyOwner pub...
    tag 18			address public owner
      JUMPDEST 			address public owner
      CALLVALUE 			address public owner
      ISZERO 			address public owner
      PUSH [tag] 77			address public owner
      JUMPI 			address public owner
      PUSH 0			address public owner
      DUP1 			address public owner
      REVERT 			address public owner
    tag 77			address public owner
      JUMPDEST 			address public owner
      PUSH [tag] 78			address public owner
      PUSH [tag] 79			address public owner
      JUMP 			address public owner
    tag 78			address public owner
      JUMPDEST 			address public owner
      PUSH 40			address public owner
      MLOAD 			address public owner
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			address public owner
      SWAP2 			address public owner
      AND 			address public owner
      DUP2 			address public owner
      MSTORE 			address public owner
      PUSH 20			address public owner
      ADD 			address public owner
      PUSH 40			address public owner
      MLOAD 			address public owner
      DUP1 			address public owner
      SWAP2 			address public owner
      SUB 			address public owner
      SWAP1 			address public owner
      RETURN 			address public owner
    tag 19			string  public  constant symbo...
      JUMPDEST 			string  public  constant symbo...
      CALLVALUE 			string  public  constant symbo...
      ISZERO 			string  public  constant symbo...
      PUSH [tag] 80			string  public  constant symbo...
      JUMPI 			string  public  constant symbo...
      PUSH 0			string  public  constant symbo...
      DUP1 			string  public  constant symbo...
      REVERT 			string  public  constant symbo...
    tag 80			string  public  constant symbo...
      JUMPDEST 			string  public  constant symbo...
      PUSH [tag] 26			string  public  constant symbo...
      PUSH [tag] 82			string  public  constant symbo...
      JUMP 			string  public  constant symbo...
    tag 20			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      CALLVALUE 			function transfer(address _to,...
      ISZERO 			function transfer(address _to,...
      PUSH [tag] 87			function transfer(address _to,...
      JUMPI 			function transfer(address _to,...
      PUSH 0			function transfer(address _to,...
      DUP1 			function transfer(address _to,...
      REVERT 			function transfer(address _to,...
    tag 87			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH [tag] 33			function transfer(address _to,...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      AND 			function transfer(address _to,...
      PUSH 24			function transfer(address _to,...
      CALLDATALOAD 			function transfer(address _to,...
      PUSH [tag] 89			function transfer(address _to,...
      JUMP 			function transfer(address _to,...
    tag 21			function increaseApproval(addr...
      JUMPDEST 			function increaseApproval(addr...
      CALLVALUE 			function increaseApproval(addr...
      ISZERO 			function increaseApproval(addr...
      PUSH [tag] 90			function increaseApproval(addr...
      JUMPI 			function increaseApproval(addr...
      PUSH 0			function increaseApproval(addr...
      DUP1 			function increaseApproval(addr...
      REVERT 			function increaseApproval(addr...
    tag 90			function increaseApproval(addr...
      JUMPDEST 			function increaseApproval(addr...
      PUSH [tag] 33			function increaseApproval(addr...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			function increaseApproval(addr...
      CALLDATALOAD 			function increaseApproval(addr...
      AND 			function increaseApproval(addr...
      PUSH 24			function increaseApproval(addr...
      CALLDATALOAD 			function increaseApproval(addr...
      PUSH [tag] 92			function increaseApproval(addr...
      JUMP 			function increaseApproval(addr...
    tag 22			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      CALLVALUE 			function allowance(address _ow...
      ISZERO 			function allowance(address _ow...
      PUSH [tag] 93			function allowance(address _ow...
      JUMPI 			function allowance(address _ow...
      PUSH 0			function allowance(address _ow...
      DUP1 			function allowance(address _ow...
      REVERT 			function allowance(address _ow...
    tag 93			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH [tag] 36			function allowance(address _ow...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			function allowance(address _ow...
      CALLDATALOAD 			function allowance(address _ow...
      DUP2 			function allowance(address _ow...
      AND 			function allowance(address _ow...
      SWAP1 			function allowance(address _ow...
      PUSH 24			function allowance(address _ow...
      CALLDATALOAD 			function allowance(address _ow...
      AND 			function allowance(address _ow...
      PUSH [tag] 95			function allowance(address _ow...
      JUMP 			function allowance(address _ow...
    tag 23			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      CALLVALUE 			function transferOwnership(add...
      ISZERO 			function transferOwnership(add...
      PUSH [tag] 96			function transferOwnership(add...
      JUMPI 			function transferOwnership(add...
      PUSH 0			function transferOwnership(add...
      DUP1 			function transferOwnership(add...
      REVERT 			function transferOwnership(add...
    tag 96			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      PUSH [tag] 54			function transferOwnership(add...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      PUSH 4			function transferOwnership(add...
      CALLDATALOAD 			function transferOwnership(add...
      AND 			function transferOwnership(add...
      PUSH [tag] 98			function transferOwnership(add...
      JUMP 			function transferOwnership(add...
    tag 24			address public admin
      JUMPDEST 			address public admin
      CALLVALUE 			address public admin
      ISZERO 			address public admin
      PUSH [tag] 99			address public admin
      JUMPI 			address public admin
      PUSH 0			address public admin
      DUP1 			address public admin
      REVERT 			address public admin
    tag 99			address public admin
      JUMPDEST 			address public admin
      PUSH [tag] 78			address public admin
      PUSH [tag] 101			address public admin
      JUMP 			address public admin
    tag 27			string  public  constant name ...
      JUMPDEST 			string  public  constant name ...
      PUSH 40			string  public  constant name ...
      DUP1 			string  public  constant name ...
      MLOAD 			string  public  constant name ...
      SWAP1 			string  public  constant name ...
      DUP2 			string  public  constant name ...
      ADD 			string  public  constant name ...
      PUSH 40			string  public  constant name ...
      MSTORE 			string  public  constant name ...
      PUSH 9			string  public  constant name ...
      DUP2 			string  public  constant name ...
      MSTORE 			string  public  constant name ...
      PUSH 4B616E67436861696E0000000000000000000000000000000000000000000000			string  public  constant name ...
      PUSH 20			string  public  constant name ...
      DUP3 			string  public  constant name ...
      ADD 			string  public  constant name ...
      MSTORE 			string  public  constant name ...
      DUP2 			string  public  constant name ...
      JUMP [out]			string  public  constant name ...
    tag 34			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 3			paused
      SLOAD 			paused
      PUSH 0			bool
      SWAP1 			bool
      PUSH A0			
      PUSH 2			
      EXP 			
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			!paused
      PUSH [tag] 103			require(!paused)
      JUMPI 			require(!paused)
      PUSH 0			require(!paused)
      DUP1 			require(!paused)
      REVERT 			require(!paused)
    tag 103			require(!paused)
      JUMPDEST 			require(!paused)
      PUSH [tag] 105			super.approve(_spender, _value...
      DUP4 			_spender
      DUP4 			_value
      PUSH [tag] 106			super.approve
      JUMP [in]			super.approve(_spender, _value...
    tag 105			super.approve(_spender, _value...
      JUMPDEST 			super.approve(_spender, _value...
      SWAP4 			return super.approve(_spender,...
      SWAP3 			function approve(address _spen...
      POP 			
      POP 			
      POP 			
      JUMP [out]			function approve(address _spen...
    tag 37			uint256 public totalSupply = 5...
      JUMPDEST 			uint256 public totalSupply = 5...
      PUSH 5			uint256 public totalSupply = 5...
      SLOAD 			uint256 public totalSupply = 5...
      DUP2 			uint256 public totalSupply = 5...
      JUMP [out]			uint256 public totalSupply = 5...
    tag 40			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 0			bool
      DUP3 			_to
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP2 			_to != address(0x0)
      AND 			_to != address(0x0)
      ISZERO 			_to != address(0x0)
      ISZERO 			_to != address(0x0)
      PUSH [tag] 108			require(_to != address(0x0))
      JUMPI 			require(_to != address(0x0))
      PUSH 0			require(_to != address(0x0))
      DUP1 			require(_to != address(0x0))
      REVERT 			require(_to != address(0x0))
    tag 108			require(_to != address(0x0))
      JUMPDEST 			require(_to != address(0x0))
      ADDRESS 			this
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			_to != address(this)
      DUP2 			_to
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			_to != address(this)
      EQ 			_to != address(this)
      ISZERO 			_to != address(this)
      ISZERO 			require(_to != address(this))
      ISZERO 			require(_to != address(this))
      PUSH [tag] 109			require(_to != address(this))
      JUMPI 			require(_to != address(this))
      PUSH 0			require(_to != address(this))
      DUP1 			require(_to != address(this))
      REVERT 			require(_to != address(this))
    tag 109			require(_to != address(this))
      JUMPDEST 			require(_to != address(this))
      PUSH [tag] 111			super.transferFrom(_from, _to,...
      DUP6 			_from
      DUP6 			_to
      DUP6 			_value
      PUSH [tag] 112			super.transferFrom
      JUMP [in]			super.transferFrom(_from, _to,...
    tag 111			super.transferFrom(_from, _to,...
      JUMPDEST 			super.transferFrom(_from, _to,...
      SWAP6 			return super.transferFrom(_fro...
      SWAP5 			function transferFrom(address ...
      POP 			
      POP 			
      POP 			
      POP 			
      POP 			
      JUMP [out]			function transferFrom(address ...
    tag 43			mapping (address => uint256) p...
      JUMPDEST 			mapping (address => uint256) p...
      PUSH 4			mapping (address => uint256) p...
      PUSH 20			mapping (address => uint256) p...
      MSTORE 			mapping (address => uint256) p...
      PUSH 0			mapping (address => uint256) p...
      SWAP1 			mapping (address => uint256) p...
      DUP2 			mapping (address => uint256) p...
      MSTORE 			mapping (address => uint256) p...
      PUSH 40			mapping (address => uint256) p...
      SWAP1 			mapping (address => uint256) p...
      KECCAK256 			mapping (address => uint256) p...
      SLOAD 			mapping (address => uint256) p...
      DUP2 			mapping (address => uint256) p...
      JUMP [out]			mapping (address => uint256) p...
    tag 46			function lock(address _target,...
      JUMPDEST 			function lock(address _target,...
      PUSH 2			owner
      SLOAD 			owner
      PUSH 0			bool
      SWAP1 			bool
      CALLER 			msg.sender
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			msg.sender == owner
      DUP2 			msg.sender == owner
      AND 			msg.sender == owner
      SWAP2 			owner
      AND 			owner
      EQ 			msg.sender == owner
      DUP1 			msg.sender == owner
      PUSH [tag] 114			msg.sender == owner || msg.sen...
      JUMPI 			msg.sender == owner || msg.sen...
      POP 			
      PUSH 3			admin
      SLOAD 			admin
      CALLER 			msg.sender
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			msg.sender == admin
      DUP2 			msg.sender == admin
      AND 			msg.sender == admin
      SWAP2 			admin
      AND 			admin
      EQ 			msg.sender == admin
    tag 114			msg.sender == owner || msg.sen...
      JUMPDEST 			msg.sender == owner || msg.sen...
      ISZERO 			require(msg.sender == owner ||...
      ISZERO 			require(msg.sender == owner ||...
      PUSH [tag] 115			require(msg.sender == owner ||...
      JUMPI 			require(msg.sender == owner ||...
      PUSH 0			require(msg.sender == owner ||...
      DUP1 			require(msg.sender == owner ||...
      REVERT 			require(msg.sender == owner ||...
    tag 115			require(msg.sender == owner ||...
      JUMPDEST 			require(msg.sender == owner ||...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP4 			lockMap[_target]
      AND 			lockMap[_target]
      PUSH 0			lockMap[_target]
      SWAP1 			lockMap[_target]
      DUP2 			lockMap[_target]
      MSTORE 			lockMap[_target]
      PUSH 4			lockMap
      PUSH 20			lockMap[_target]
      MSTORE 			lockMap[_target]
      PUSH 40			lockMap[_target]
      SWAP1 			lockMap[_target]
      DUP2 			lockMap[_target]
      SWAP1 			lockMap[_target]
      KECCAK256 			lockMap[_target]
      DUP4 			lockMap[_target] = _value
      SWAP1 			lockMap[_target] = _value
      SSTORE 			lockMap[_target] = _value
      PUSH 625FED9875DADA8643F2418B838AE0BC78D9A148A18EEE4EE1979FF0F3F5D427			Lock(_target, _value)
      SWAP1 			Lock(_target, _value)
      DUP5 			_target
      SWAP1 			_target
      DUP5 			_value
      SWAP1 			_value
      MLOAD 			Lock(_target, _value)
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			Lock(_target, _value)
      SWAP3 			Lock(_target, _value)
      AND 			Lock(_target, _value)
      DUP3 			Lock(_target, _value)
      MSTORE 			Lock(_target, _value)
      PUSH 20			Lock(_target, _value)
      DUP3 			Lock(_target, _value)
      ADD 			Lock(_target, _value)
      MSTORE 			Lock(_target, _value)
      PUSH 40			Lock(_target, _value)
      SWAP1 			Lock(_target, _value)
      DUP2 			Lock(_target, _value)
      ADD 			Lock(_target, _value)
      SWAP1 			Lock(_target, _value)
      MLOAD 			Lock(_target, _value)
      DUP1 			Lock(_target, _value)
      SWAP2 			Lock(_target, _value)
      SUB 			Lock(_target, _value)
      SWAP1 			Lock(_target, _value)
      LOG1 			Lock(_target, _value)
      POP 			
      PUSH 1			true
      SWAP3 			function lock(address _target,...
      SWAP2 			function lock(address _target,...
      POP 			function lock(address _target,...
      POP 			function lock(address _target,...
      JUMP [out]			function lock(address _target,...
    tag 49			uint8   public  constant decim...
      JUMPDEST 			uint8   public  constant decim...
      PUSH 12			18
      DUP2 			uint8   public  constant decim...
      JUMP [out]			uint8   public  constant decim...
    tag 52			function transferBatch(address...
      JUMPDEST 			function transferBatch(address...
      PUSH 0			bool
      DUP1 			uint count
      PUSH 0			uint i
      DUP1 			uint j
      DUP5 			_values
      MLOAD 			_values.length
      DUP7 			_tagAddrs
      MLOAD 			_tagAddrs.length
      EQ 			_tagAddrs.length == _values.le...
      PUSH [tag] 118			require(_tagAddrs.length == _v...
      JUMPI 			require(_tagAddrs.length == _v...
      PUSH 0			require(_tagAddrs.length == _v...
      DUP1 			require(_tagAddrs.length == _v...
      REVERT 			require(_tagAddrs.length == _v...
    tag 118			require(_tagAddrs.length == _v...
      JUMPDEST 			require(_tagAddrs.length == _v...
      PUSH 0			0
      SWAP3 			uint count = 0
      POP 			uint count = 0
      PUSH 0			0
      SWAP2 			uint i = 0
      POP 			uint i = 0
    tag 119			for (uint i = 0; i<_tagAddrs.l...
      JUMPDEST 			for (uint i = 0; i<_tagAddrs.l...
      DUP6 			_tagAddrs
      MLOAD 			_tagAddrs.length
      DUP3 			i
      LT 			i<_tagAddrs.length
      ISZERO 			for (uint i = 0; i<_tagAddrs.l...
      PUSH [tag] 120			for (uint i = 0; i<_tagAddrs.l...
      JUMPI 			for (uint i = 0; i<_tagAddrs.l...
      PUSH 0			0x0
      DUP7 			_tagAddrs
      DUP4 			i
      DUP2 			_tagAddrs
      MLOAD 			_tagAddrs[i]
      DUP2 			_tagAddrs[i]
      LT 			_tagAddrs[i]
      PUSH [tag] 122			_tagAddrs[i]
      JUMPI 			_tagAddrs[i]
      INVALID 			_tagAddrs[i]
    tag 122			_tagAddrs[i]
      JUMPDEST 			_tagAddrs[i]
      SWAP1 			_tagAddrs[i]
      PUSH 20			_tagAddrs[i]
      ADD 			_tagAddrs[i]
      SWAP1 			_tagAddrs[i]
      PUSH 20			_tagAddrs[i]
      MUL 			_tagAddrs[i]
      ADD 			_tagAddrs[i]
      MLOAD 			_tagAddrs[i]
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			_tagAddrs[i] != address(0x0)
      EQ 			_tagAddrs[i] != address(0x0)
      ISZERO 			_tagAddrs[i] != address(0x0)
      PUSH [tag] 123			require(_tagAddrs[i] != addres...
      JUMPI 			require(_tagAddrs[i] != addres...
      PUSH 0			require(_tagAddrs[i] != addres...
      DUP1 			require(_tagAddrs[i] != addres...
      REVERT 			require(_tagAddrs[i] != addres...
    tag 123			require(_tagAddrs[i] != addres...
      JUMPDEST 			require(_tagAddrs[i] != addres...
      ADDRESS 			this
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			_tagAddrs[i] != address(this)
      DUP7 			_tagAddrs
      DUP4 			i
      DUP2 			_tagAddrs[i]
      MLOAD 			_tagAddrs[i]
      DUP2 			_tagAddrs[i]
      LT 			_tagAddrs[i]
      PUSH [tag] 124			_tagAddrs[i]
      JUMPI 			_tagAddrs[i]
      INVALID 			_tagAddrs[i]
    tag 124			_tagAddrs[i]
      JUMPDEST 			_tagAddrs[i]
      SWAP1 			_tagAddrs[i]
      PUSH 20			_tagAddrs[i]
      ADD 			_tagAddrs[i]
      SWAP1 			_tagAddrs[i]
      PUSH 20			_tagAddrs[i]
      MUL 			_tagAddrs[i]
      ADD 			_tagAddrs[i]
      MLOAD 			_tagAddrs[i]
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			_tagAddrs[i] != address(this)
      EQ 			_tagAddrs[i] != address(this)
      ISZERO 			_tagAddrs[i] != address(this)
      PUSH [tag] 125			require(_tagAddrs[i] != addres...
      JUMPI 			require(_tagAddrs[i] != addres...
      PUSH 0			require(_tagAddrs[i] != addres...
      DUP1 			require(_tagAddrs[i] != addres...
      REVERT 			require(_tagAddrs[i] != addres...
    tag 125			require(_tagAddrs[i] != addres...
      JUMPDEST 			require(_tagAddrs[i] != addres...
      PUSH 0			0
      DUP6 			_values
      DUP4 			i
      DUP2 			_values[i]
      MLOAD 			_values[i]
      DUP2 			_values[i]
      LT 			_values[i]
      PUSH [tag] 126			_values[i]
      JUMPI 			_values[i]
      INVALID 			_values[i]
    tag 126			_values[i]
      JUMPDEST 			_values[i]
      SWAP1 			_values[i]
      PUSH 20			_values[i]
      ADD 			_values[i]
      SWAP1 			_values[i]
      PUSH 20			_values[i]
      MUL 			_values[i]
      ADD 			_values[i]
      MLOAD 			_values[i]
      GT 			_values[i] > 0
      PUSH [tag] 127			require(_values[i] > 0)
      JUMPI 			require(_values[i] > 0)
      PUSH 0			require(_values[i] > 0)
      DUP1 			require(_values[i] > 0)
      REVERT 			require(_values[i] > 0)
    tag 127			require(_values[i] > 0)
      JUMPDEST 			require(_values[i] > 0)
      DUP5 			_values
      DUP3 			i
      DUP2 			_values[i]
      MLOAD 			_values[i]
      DUP2 			_values[i]
      LT 			_values[i]
      PUSH [tag] 128			_values[i]
      JUMPI 			_values[i]
      INVALID 			_values[i]
    tag 128			_values[i]
      JUMPDEST 			_values[i]
      SWAP1 			_values[i]
      PUSH 20			_values[i]
      ADD 			_values[i]
      SWAP1 			_values[i]
      PUSH 20			_values[i]
      MUL 			_values[i]
      ADD 			_values[i]
      MLOAD 			_values[i]
      SWAP1 			count += _values[i]
      SWAP3 			count += _values[i]
      ADD 			count += _values[i]
      SWAP2 			count += _values[i]
      PUSH 1			i++
      SWAP1 			i++
      SWAP2 			i++
      ADD 			i++
      SWAP1 			i++
      PUSH [tag] 119			for (uint i = 0; i<_tagAddrs.l...
      JUMP 			for (uint i = 0; i<_tagAddrs.l...
    tag 120			for (uint i = 0; i<_tagAddrs.l...
      JUMPDEST 			for (uint i = 0; i<_tagAddrs.l...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      CALLER 			msg.sender
      AND 			balances[msg.sender]
      PUSH 0			balances
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      DUP2 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 40			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      DUP4 			balances[msg.sender] >= count
      SWAP1 			balances[msg.sender] >= count
      LT 			balances[msg.sender] >= count
      ISZERO 			balances[msg.sender] >= count
      PUSH [tag] 129			require(balances[msg.sender] >...
      JUMPI 			require(balances[msg.sender] >...
      PUSH 0			require(balances[msg.sender] >...
      DUP1 			require(balances[msg.sender] >...
      REVERT 			require(balances[msg.sender] >...
    tag 129			require(balances[msg.sender] >...
      JUMPDEST 			require(balances[msg.sender] >...
      POP 			
      PUSH 0			0
    tag 130			for (uint j = 0; j<_tagAddrs.l...
      JUMPDEST 			for (uint j = 0; j<_tagAddrs.l...
      DUP6 			_tagAddrs
      MLOAD 			_tagAddrs.length
      DUP2 			j
      LT 			j<_tagAddrs.length
      ISZERO 			for (uint j = 0; j<_tagAddrs.l...
      PUSH [tag] 131			for (uint j = 0; j<_tagAddrs.l...
      JUMPI 			for (uint j = 0; j<_tagAddrs.l...
      PUSH [tag] 133			super.transfer(_tagAddrs[j], _...
      DUP7 			_tagAddrs
      DUP3 			j
      DUP2 			_tagAddrs[j]
      MLOAD 			_tagAddrs[j]
      DUP2 			_tagAddrs[j]
      LT 			_tagAddrs[j]
      PUSH [tag] 134			_tagAddrs[j]
      JUMPI 			_tagAddrs[j]
      INVALID 			_tagAddrs[j]
    tag 134			_tagAddrs[j]
      JUMPDEST 			_tagAddrs[j]
      SWAP1 			_tagAddrs[j]
      PUSH 20			_tagAddrs[j]
      ADD 			_tagAddrs[j]
      SWAP1 			_tagAddrs[j]
      PUSH 20			_tagAddrs[j]
      MUL 			_tagAddrs[j]
      ADD 			_tagAddrs[j]
      MLOAD 			_tagAddrs[j]
      DUP7 			_values
      DUP4 			j
      DUP2 			_values[j]
      MLOAD 			_values[j]
      DUP2 			_values[j]
      LT 			_values[j]
      PUSH [tag] 135			_values[j]
      JUMPI 			_values[j]
      INVALID 			_values[j]
    tag 135			_values[j]
      JUMPDEST 			_values[j]
      SWAP1 			_values[j]
      PUSH 20			_values[j]
      ADD 			_values[j]
      SWAP1 			_values[j]
      PUSH 20			_values[j]
      MUL 			_values[j]
      ADD 			_values[j]
      MLOAD 			_values[j]
      PUSH [tag] 136			super.transfer
      JUMP [in]			super.transfer(_tagAddrs[j], _...
    tag 133			super.transfer(_tagAddrs[j], _...
      JUMPDEST 			super.transfer(_tagAddrs[j], _...
      POP 			
      PUSH 1			j++
      ADD 			j++
      PUSH [tag] 130			for (uint j = 0; j<_tagAddrs.l...
      JUMP 			for (uint j = 0; j<_tagAddrs.l...
    tag 131			for (uint j = 0; j<_tagAddrs.l...
      JUMPDEST 			for (uint j = 0; j<_tagAddrs.l...
      POP 			
      PUSH 1			true
      SWAP6 			true
      SWAP5 			function transferBatch(address...
      POP 			
      POP 			
      POP 			
      POP 			
      POP 			
      JUMP [out]			function transferBatch(address...
    tag 55			function kill() public onlyOwn...
      JUMPDEST 			function kill() public onlyOwn...
      PUSH 2			owner
      SLOAD 			owner
      CALLER 			msg.sender
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			msg.sender == owner
      DUP2 			msg.sender == owner
      AND 			msg.sender == owner
      SWAP2 			owner
      AND 			owner
      EQ 			msg.sender == owner
      DUP1 			msg.sender == owner
      PUSH [tag] 138			msg.sender == owner || msg.sen...
      JUMPI 			msg.sender == owner || msg.sen...
      POP 			
      PUSH 3			admin
      SLOAD 			admin
      CALLER 			msg.sender
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			msg.sender == admin
      DUP2 			msg.sender == admin
      AND 			msg.sender == admin
      SWAP2 			admin
      AND 			admin
      EQ 			msg.sender == admin
    tag 138			msg.sender == owner || msg.sen...
      JUMPDEST 			msg.sender == owner || msg.sen...
      ISZERO 			require(msg.sender == owner ||...
      ISZERO 			require(msg.sender == owner ||...
      PUSH [tag] 139			require(msg.sender == owner ||...
      JUMPI 			require(msg.sender == owner ||...
      PUSH 0			require(msg.sender == owner ||...
      DUP1 			require(msg.sender == owner ||...
      REVERT 			require(msg.sender == owner ||...
    tag 139			require(msg.sender == owner ||...
      JUMPDEST 			require(msg.sender == owner ||...
      PUSH 2			owner
      SLOAD 			owner
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			owner
      SELFDESTRUCT 			selfdestruct(owner)
    tag 58			function transferAdminship(add...
      JUMPDEST 			function transferAdminship(add...
      PUSH 2			owner
      SLOAD 			owner
      CALLER 			msg.sender
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			msg.sender == owner
      DUP2 			msg.sender == owner
      AND 			msg.sender == owner
      SWAP2 			owner
      AND 			owner
      EQ 			msg.sender == owner
      DUP1 			msg.sender == owner
      PUSH [tag] 142			msg.sender == owner || msg.sen...
      JUMPI 			msg.sender == owner || msg.sen...
      POP 			
      PUSH 3			admin
      SLOAD 			admin
      CALLER 			msg.sender
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			msg.sender == admin
      DUP2 			msg.sender == admin
      AND 			msg.sender == admin
      SWAP2 			admin
      AND 			admin
      EQ 			msg.sender == admin
    tag 142			msg.sender == owner || msg.sen...
      JUMPDEST 			msg.sender == owner || msg.sen...
      ISZERO 			require(msg.sender == owner ||...
      ISZERO 			require(msg.sender == owner ||...
      PUSH [tag] 143			require(msg.sender == owner ||...
      JUMPI 			require(msg.sender == owner ||...
      PUSH 0			require(msg.sender == owner ||...
      DUP1 			require(msg.sender == owner ||...
      REVERT 			require(msg.sender == owner ||...
    tag 143			require(msg.sender == owner ||...
      JUMPDEST 			require(msg.sender == owner ||...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP2 			newAdmin != address(0)
      AND 			newAdmin != address(0)
      ISZERO 			newAdmin != address(0)
      ISZERO 			newAdmin != address(0)
      PUSH [tag] 145			require(newAdmin != address(0)...
      JUMPI 			require(newAdmin != address(0)...
      PUSH 0			require(newAdmin != address(0)...
      DUP1 			require(newAdmin != address(0)...
      REVERT 			require(newAdmin != address(0)...
    tag 145			require(newAdmin != address(0)...
      JUMPDEST 			require(newAdmin != address(0)...
      PUSH 3			admin
      SLOAD 			admin
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP1 			OwnershipTransferred(admin, ne...
      DUP4 			OwnershipTransferred(admin, ne...
      AND 			OwnershipTransferred(admin, ne...
      SWAP2 			OwnershipTransferred(admin, ne...
      AND 			admin
      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0			OwnershipTransferred(admin, ne...
      PUSH 40			OwnershipTransferred(admin, ne...
      MLOAD 			OwnershipTransferred(admin, ne...
      PUSH 40			OwnershipTransferred(admin, ne...
      MLOAD 			OwnershipTransferred(admin, ne...
      DUP1 			OwnershipTransferred(admin, ne...
      SWAP2 			OwnershipTransferred(admin, ne...
      SUB 			OwnershipTransferred(admin, ne...
      SWAP1 			OwnershipTransferred(admin, ne...
      LOG3 			OwnershipTransferred(admin, ne...
      PUSH 3			admin
      DUP1 			admin = newAdmin
      SLOAD 			admin = newAdmin
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			
      NOT 			
      AND 			admin = newAdmin
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP3 			admin = newAdmin
      SWAP1 			admin = newAdmin
      SWAP3 			admin = newAdmin
      AND 			admin = newAdmin
      SWAP2 			admin = newAdmin
      SWAP1 			admin = newAdmin
      SWAP2 			admin = newAdmin
      OR 			admin = newAdmin
      SWAP1 			admin = newAdmin
      SSTORE 			admin = newAdmin
      JUMP [out]			function transferAdminship(add...
    tag 61			bool public paused = false
      JUMPDEST 			bool public paused = false
      PUSH 3			bool public paused = false
      SLOAD 			bool public paused = false
      PUSH A0			
      PUSH 2			
      EXP 			
      SWAP1 			bool public paused = false
      DIV 			bool public paused = false
      PUSH FF			bool public paused = false
      AND 			bool public paused = false
      DUP2 			bool public paused = false
      JUMP [out]			bool public paused = false
    tag 64			function decreaseApproval(addr...
      JUMPDEST 			function decreaseApproval(addr...
      PUSH 3			paused
      SLOAD 			paused
      PUSH 0			bool success
      SWAP1 			bool success
      PUSH A0			
      PUSH 2			
      EXP 			
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			!paused
      PUSH [tag] 147			require(!paused)
      JUMPI 			require(!paused)
      PUSH 0			require(!paused)
      DUP1 			require(!paused)
      REVERT 			require(!paused)
    tag 147			require(!paused)
      JUMPDEST 			require(!paused)
      PUSH [tag] 105			super.decreaseApproval(_spende...
      DUP4 			_spender
      DUP4 			_subtractedValue
      PUSH [tag] 150			super.decreaseApproval
      JUMP [in]			super.decreaseApproval(_spende...
    tag 67			function getLock(address _targ...
      JUMPDEST 			function getLock(address _targ...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			lockMap[_target]
      PUSH 0			uint256
      SWAP1 			lockMap[_target]
      DUP2 			lockMap[_target]
      MSTORE 			lockMap[_target]
      PUSH 4			lockMap
      PUSH 20			lockMap[_target]
      MSTORE 			lockMap[_target]
      PUSH 40			lockMap[_target]
      SWAP1 			lockMap[_target]
      KECCAK256 			lockMap[_target]
      SLOAD 			lockMap[_target]
      SWAP1 			lockMap[_target]
      JUMP [out]			function getLock(address _targ...
    tag 70			uint256 public constant decima...
      JUMPDEST 			uint256 public constant decima...
      PUSH DE0B6B3A7640000			10 ** uint256(decimals)
      DUP2 			uint256 public constant decima...
      JUMP [out]			uint256 public constant decima...
    tag 73			function balanceOf(address _ow...
      JUMPDEST 			function balanceOf(address _ow...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			balances[_owner]
      PUSH 0			uint256 balance
      SWAP1 			balances[_owner]
      DUP2 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 20			balances[_owner]
      DUP2 			balances[_owner]
      SWAP1 			balances[_owner]
      MSTORE 			balances[_owner]
      PUSH 40			balances[_owner]
      SWAP1 			balances[_owner]
      KECCAK256 			balances[_owner]
      SLOAD 			balances[_owner]
      SWAP1 			balances[_owner]
      JUMP [out]			function balanceOf(address _ow...
    tag 76			function pause() onlyOwner pub...
      JUMPDEST 			function pause() onlyOwner pub...
      PUSH 2			owner
      SLOAD 			owner
      CALLER 			msg.sender
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			msg.sender == owner
      DUP2 			msg.sender == owner
      AND 			msg.sender == owner
      SWAP2 			owner
      AND 			owner
      EQ 			msg.sender == owner
      DUP1 			msg.sender == owner
      PUSH [tag] 154			msg.sender == owner || msg.sen...
      JUMPI 			msg.sender == owner || msg.sen...
      POP 			
      PUSH 3			admin
      SLOAD 			admin
      CALLER 			msg.sender
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			msg.sender == admin
      DUP2 			msg.sender == admin
      AND 			msg.sender == admin
      SWAP2 			admin
      AND 			admin
      EQ 			msg.sender == admin
    tag 154			msg.sender == owner || msg.sen...
      JUMPDEST 			msg.sender == owner || msg.sen...
      ISZERO 			require(msg.sender == owner ||...
      ISZERO 			require(msg.sender == owner ||...
      PUSH [tag] 155			require(msg.sender == owner ||...
      JUMPI 			require(msg.sender == owner ||...
      PUSH 0			require(msg.sender == owner ||...
      DUP1 			require(msg.sender == owner ||...
      REVERT 			require(msg.sender == owner ||...
    tag 155			require(msg.sender == owner ||...
      JUMPDEST 			require(msg.sender == owner ||...
      PUSH 3			paused
      DUP1 			paused
      SLOAD 			paused
      PUSH FF			paused
      PUSH A0			
      PUSH 2			
      EXP 			
      DUP1 			paused
      DUP4 			paused
      DIV 			paused
      DUP3 			paused
      AND 			paused
      ISZERO 			!paused
      DUP2 			paused = !paused
      MUL 			paused = !paused
      PUSH FF0000000000000000000000000000000000000000			
      NOT 			
      SWAP1 			paused = !paused
      SWAP4 			paused = !paused
      AND 			paused = !paused
      SWAP3 			paused = !paused
      SWAP1 			paused = !paused
      SWAP3 			paused = !paused
      OR 			paused = !paused
      SWAP3 			paused = !paused
      DUP4 			paused = !paused
      SWAP1 			paused = !paused
      SSTORE 			paused = !paused
      PUSH 9422424B175DDA897495A07B091EF74A3EF715CF6D866FC972954C1C7F459304			Pause(paused)
      SWAP3 			Pause(paused)
      SWAP2 			paused
      SWAP1 			paused
      SWAP2 			paused
      DIV 			paused
      AND 			paused
      PUSH 40			Pause(paused)
      MLOAD 			Pause(paused)
      SWAP1 			Pause(paused)
      ISZERO 			Pause(paused)
      ISZERO 			Pause(paused)
      DUP2 			Pause(paused)
      MSTORE 			Pause(paused)
      PUSH 20			Pause(paused)
      ADD 			Pause(paused)
      PUSH 40			Pause(paused)
      MLOAD 			Pause(paused)
      DUP1 			Pause(paused)
      SWAP2 			Pause(paused)
      SUB 			Pause(paused)
      SWAP1 			Pause(paused)
      LOG1 			Pause(paused)
      JUMP [out]			function pause() onlyOwner pub...
    tag 79			address public owner
      JUMPDEST 			address public owner
      PUSH 2			address public owner
      SLOAD 			address public owner
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			address public owner
      DUP2 			address public owner
      JUMP [out]			address public owner
    tag 82			string  public  constant symbo...
      JUMPDEST 			string  public  constant symbo...
      PUSH 40			string  public  constant symbo...
      DUP1 			string  public  constant symbo...
      MLOAD 			string  public  constant symbo...
      SWAP1 			string  public  constant symbo...
      DUP2 			string  public  constant symbo...
      ADD 			string  public  constant symbo...
      PUSH 40			string  public  constant symbo...
      MSTORE 			string  public  constant symbo...
      PUSH 4			string  public  constant symbo...
      DUP2 			string  public  constant symbo...
      MSTORE 			string  public  constant symbo...
      PUSH 4B414E4700000000000000000000000000000000000000000000000000000000			string  public  constant symbo...
      PUSH 20			string  public  constant symbo...
      DUP3 			string  public  constant symbo...
      ADD 			string  public  constant symbo...
      MSTORE 			string  public  constant symbo...
      DUP2 			string  public  constant symbo...
      JUMP [out]			string  public  constant symbo...
    tag 89			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 0			bool
      DUP3 			_to
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP2 			_to != address(0x0)
      AND 			_to != address(0x0)
      ISZERO 			_to != address(0x0)
      ISZERO 			_to != address(0x0)
      PUSH [tag] 158			require(_to != address(0x0))
      JUMPI 			require(_to != address(0x0))
      PUSH 0			require(_to != address(0x0))
      DUP1 			require(_to != address(0x0))
      REVERT 			require(_to != address(0x0))
    tag 158			require(_to != address(0x0))
      JUMPDEST 			require(_to != address(0x0))
      ADDRESS 			this
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			_to != address(this)
      DUP2 			_to
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			_to != address(this)
      EQ 			_to != address(this)
      ISZERO 			_to != address(this)
      ISZERO 			require(_to != address(this))
      ISZERO 			require(_to != address(this))
      PUSH [tag] 159			require(_to != address(this))
      JUMPI 			require(_to != address(this))
      PUSH 0			require(_to != address(this))
      DUP1 			require(_to != address(this))
      REVERT 			require(_to != address(this))
    tag 159			require(_to != address(this))
      JUMPDEST 			require(_to != address(this))
      PUSH [tag] 161			super.transfer(_to, _value)
      DUP5 			_to
      DUP5 			_value
      PUSH [tag] 136			super.transfer
      JUMP [in]			super.transfer(_to, _value)
    tag 161			super.transfer(_to, _value)
      JUMPDEST 			super.transfer(_to, _value)
      SWAP5 			return super.transfer(_to, _va...
      SWAP4 			function transfer(address _to,...
      POP 			
      POP 			
      POP 			
      POP 			
      JUMP [out]			function transfer(address _to,...
    tag 92			function increaseApproval(addr...
      JUMPDEST 			function increaseApproval(addr...
      PUSH 3			paused
      SLOAD 			paused
      PUSH 0			bool success
      SWAP1 			bool success
      PUSH A0			
      PUSH 2			
      EXP 			
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			!paused
      PUSH [tag] 163			require(!paused)
      JUMPI 			require(!paused)
      PUSH 0			require(!paused)
      DUP1 			require(!paused)
      REVERT 			require(!paused)
    tag 163			require(!paused)
      JUMPDEST 			require(!paused)
      PUSH [tag] 105			super.increaseApproval(_spende...
      DUP4 			_spender
      DUP4 			_addedValue
      PUSH [tag] 166			super.increaseApproval
      JUMP [in]			super.increaseApproval(_spende...
    tag 95			function allowance(address _ow...
      JUMPDEST 			function allowance(address _ow...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP2 			allowed[_owner]
      DUP3 			allowed[_owner]
      AND 			allowed[_owner]
      PUSH 0			uint256
      SWAP1 			allowed[_owner]
      DUP2 			allowed[_owner]
      MSTORE 			allowed[_owner]
      PUSH 1			allowed
      PUSH 20			allowed[_owner]
      SWAP1 			allowed[_owner]
      DUP2 			allowed[_owner]
      MSTORE 			allowed[_owner]
      PUSH 40			allowed[_owner]
      DUP1 			allowed[_owner]
      DUP4 			allowed[_owner]
      KECCAK256 			allowed[_owner]
      SWAP4 			allowed[_owner][_spender]
      SWAP1 			allowed[_owner][_spender]
      SWAP5 			allowed[_owner][_spender]
      AND 			allowed[_owner][_spender]
      DUP3 			allowed[_owner][_spender]
      MSTORE 			allowed[_owner][_spender]
      SWAP2 			allowed[_owner][_spender]
      SWAP1 			allowed[_owner][_spender]
      SWAP2 			allowed[_owner][_spender]
      MSTORE 			allowed[_owner][_spender]
      KECCAK256 			allowed[_owner][_spender]
      SLOAD 			allowed[_owner][_spender]
      SWAP1 			allowed[_owner][_spender]
      JUMP [out]			function allowance(address _ow...
    tag 98			function transferOwnership(add...
      JUMPDEST 			function transferOwnership(add...
      PUSH 2			owner
      SLOAD 			owner
      CALLER 			msg.sender
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			msg.sender == owner
      DUP2 			msg.sender == owner
      AND 			msg.sender == owner
      SWAP2 			owner
      AND 			owner
      EQ 			msg.sender == owner
      DUP1 			msg.sender == owner
      PUSH [tag] 169			msg.sender == owner || msg.sen...
      JUMPI 			msg.sender == owner || msg.sen...
      POP 			
      PUSH 3			admin
      SLOAD 			admin
      CALLER 			msg.sender
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP1 			msg.sender == admin
      DUP2 			msg.sender == admin
      AND 			msg.sender == admin
      SWAP2 			admin
      AND 			admin
      EQ 			msg.sender == admin
    tag 169			msg.sender == owner || msg.sen...
      JUMPDEST 			msg.sender == owner || msg.sen...
      ISZERO 			require(msg.sender == owner ||...
      ISZERO 			require(msg.sender == owner ||...
      PUSH [tag] 170			require(msg.sender == owner ||...
      JUMPI 			require(msg.sender == owner ||...
      PUSH 0			require(msg.sender == owner ||...
      DUP1 			require(msg.sender == owner ||...
      REVERT 			require(msg.sender == owner ||...
    tag 170			require(msg.sender == owner ||...
      JUMPDEST 			require(msg.sender == owner ||...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP2 			newOwner != address(0)
      AND 			newOwner != address(0)
      ISZERO 			newOwner != address(0)
      ISZERO 			newOwner != address(0)
      PUSH [tag] 172			require(newOwner != address(0)...
      JUMPI 			require(newOwner != address(0)...
      PUSH 0			require(newOwner != address(0)...
      DUP1 			require(newOwner != address(0)...
      REVERT 			require(newOwner != address(0)...
    tag 172			require(newOwner != address(0)...
      JUMPDEST 			require(newOwner != address(0)...
      PUSH 2			owner
      SLOAD 			owner
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP1 			OwnershipTransferred(owner, ne...
      DUP4 			OwnershipTransferred(owner, ne...
      AND 			OwnershipTransferred(owner, ne...
      SWAP2 			OwnershipTransferred(owner, ne...
      AND 			owner
      PUSH 8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0			OwnershipTransferred(owner, ne...
      PUSH 40			OwnershipTransferred(owner, ne...
      MLOAD 			OwnershipTransferred(owner, ne...
      PUSH 40			OwnershipTransferred(owner, ne...
      MLOAD 			OwnershipTransferred(owner, ne...
      DUP1 			OwnershipTransferred(owner, ne...
      SWAP2 			OwnershipTransferred(owner, ne...
      SUB 			OwnershipTransferred(owner, ne...
      SWAP1 			OwnershipTransferred(owner, ne...
      LOG3 			OwnershipTransferred(owner, ne...
      PUSH 2			owner
      DUP1 			owner = newOwner
      SLOAD 			owner = newOwner
      PUSH FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF			
      NOT 			
      AND 			owner = newOwner
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      SWAP3 			owner = newOwner
      SWAP1 			owner = newOwner
      SWAP3 			owner = newOwner
      AND 			owner = newOwner
      SWAP2 			owner = newOwner
      SWAP1 			owner = newOwner
      SWAP2 			owner = newOwner
      OR 			owner = newOwner
      SWAP1 			owner = newOwner
      SSTORE 			owner = newOwner
      JUMP [out]			function transferOwnership(add...
    tag 101			address public admin
      JUMPDEST 			address public admin
      PUSH 3			address public admin
      SLOAD 			address public admin
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			address public admin
      DUP2 			address public admin
      JUMP [out]			address public admin
    tag 106			function approve(address _spen...
      JUMPDEST 			function approve(address _spen...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      CALLER 			msg.sender
      DUP2 			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH 0			bool
      DUP2 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 1			allowed
      PUSH 20			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 40			allowed[msg.sender]
      DUP1 			allowed[msg.sender]
      DUP4 			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      SWAP5 			allowed[msg.sender][_spender]
      DUP8 			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP1 			allowed[msg.sender][_spender]
      DUP5 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP5 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      SWAP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      DUP1 			allowed[msg.sender][_spender]
      DUP3 			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP6 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      SWAP1 			bool
      SWAP3 			bool
      SWAP2 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender]
      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      DUP6 			_value
      SWAP1 			_value
      MLOAD 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      DUP2 			Approval(msg.sender, _spender,...
      MSTORE 			Approval(msg.sender, _spender,...
      PUSH 20			Approval(msg.sender, _spender,...
      ADD 			Approval(msg.sender, _spender,...
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SUB 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      LOG3 			Approval(msg.sender, _spender,...
      POP 			
      PUSH 1			true
      SWAP3 			function approve(address _spen...
      SWAP2 			function approve(address _spen...
      POP 			function approve(address _spen...
      POP 			function approve(address _spen...
      JUMP [out]			function approve(address _spen...
    tag 112			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 3			paused
      SLOAD 			paused
      PUSH 0			bool
      SWAP1 			bool
      DUP5 			_from
      SWAP1 			_from
      DUP4 			_value
      SWAP1 			_value
      PUSH A0			
      PUSH 2			
      EXP 			
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			!paused
      PUSH [tag] 175			require(!paused)
      JUMPI 			require(!paused)
      PUSH 0			require(!paused)
      DUP1 			require(!paused)
      REVERT 			require(!paused)
    tag 175			require(!paused)
      JUMPDEST 			require(!paused)
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP3 			lockMap[_target]
      AND 			lockMap[_target]
      PUSH 0			lockMap[_target]
      SWAP1 			lockMap[_target]
      DUP2 			lockMap[_target]
      MSTORE 			lockMap[_target]
      PUSH 4			lockMap
      PUSH 20			lockMap[_target]
      SWAP1 			lockMap[_target]
      DUP2 			lockMap[_target]
      MSTORE 			lockMap[_target]
      PUSH 40			lockMap[_target]
      DUP1 			lockMap[_target]
      DUP4 			lockMap[_target]
      KECCAK256 			lockMap[_target]
      SLOAD 			lockMap[_target]
      SWAP2 			balances[_target]
      DUP4 			balances[_target]
      SWAP1 			balances[_target]
      MSTORE 			balances[_target]
      SWAP1 			balances[_target]
      SWAP2 			balances[_target]
      KECCAK256 			balances[_target]
      SLOAD 			balances[_target]
      SWAP1 			_value + lockMap[_target]
      DUP3 			_value + lockMap[_target]
      ADD 			_value + lockMap[_target]
      SWAP1 			balances[_target] >= _value + ...
      LT 			balances[_target] >= _value + ...
      ISZERO 			balances[_target] >= _value + ...
      PUSH [tag] 176			require(balances[_target] >= _...
      JUMPI 			require(balances[_target] >= _...
      PUSH 0			require(balances[_target] >= _...
      DUP1 			require(balances[_target] >= _...
      REVERT 			require(balances[_target] >= _...
    tag 176			require(balances[_target] >= _...
      JUMPDEST 			require(balances[_target] >= _...
      PUSH [tag] 178			super.transferFrom(_from, _to,...
      DUP7 			_from
      DUP7 			_to
      DUP7 			_value
      PUSH [tag] 179			super.transferFrom
      JUMP [in]			super.transferFrom(_from, _to,...
    tag 178			super.transferFrom(_from, _to,...
      JUMPDEST 			super.transferFrom(_from, _to,...
      SWAP7 			return super.transferFrom(_fro...
      SWAP6 			function transferFrom(address ...
      POP 			
      POP 			
      POP 			
      POP 			
      POP 			
      POP 			
      JUMP [out]			function transferFrom(address ...
    tag 136			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 3			paused
      SLOAD 			paused
      PUSH 0			bool
      SWAP1 			bool
      CALLER 			msg.sender
      SWAP1 			msg.sender
      DUP4 			_value
      SWAP1 			_value
      PUSH A0			
      PUSH 2			
      EXP 			
      SWAP1 			paused
      DIV 			paused
      PUSH FF			paused
      AND 			paused
      ISZERO 			!paused
      PUSH [tag] 181			require(!paused)
      JUMPI 			require(!paused)
      PUSH 0			require(!paused)
      DUP1 			require(!paused)
      REVERT 			require(!paused)
    tag 181			require(!paused)
      JUMPDEST 			require(!paused)
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP3 			lockMap[_target]
      AND 			lockMap[_target]
      PUSH 0			lockMap[_target]
      SWAP1 			lockMap[_target]
      DUP2 			lockMap[_target]
      MSTORE 			lockMap[_target]
      PUSH 4			lockMap
      PUSH 20			lockMap[_target]
      SWAP1 			lockMap[_target]
      DUP2 			lockMap[_target]
      MSTORE 			lockMap[_target]
      PUSH 40			lockMap[_target]
      DUP1 			lockMap[_target]
      DUP4 			lockMap[_target]
      KECCAK256 			lockMap[_target]
      SLOAD 			lockMap[_target]
      SWAP2 			balances[_target]
      DUP4 			balances[_target]
      SWAP1 			balances[_target]
      MSTORE 			balances[_target]
      SWAP1 			balances[_target]
      SWAP2 			balances[_target]
      KECCAK256 			balances[_target]
      SLOAD 			balances[_target]
      SWAP1 			_value + lockMap[_target]
      DUP3 			_value + lockMap[_target]
      ADD 			_value + lockMap[_target]
      SWAP1 			balances[_target] >= _value + ...
      LT 			balances[_target] >= _value + ...
      ISZERO 			balances[_target] >= _value + ...
      PUSH [tag] 182			require(balances[_target] >= _...
      JUMPI 			require(balances[_target] >= _...
      PUSH 0			require(balances[_target] >= _...
      DUP1 			require(balances[_target] >= _...
      REVERT 			require(balances[_target] >= _...
    tag 182			require(balances[_target] >= _...
      JUMPDEST 			require(balances[_target] >= _...
      PUSH [tag] 111			super.transfer(_to, _value)
      DUP6 			_to
      DUP6 			_value
      PUSH [tag] 185			super.transfer
      JUMP [in]			super.transfer(_to, _value)
    tag 150			function decreaseApproval(addr...
      JUMPDEST 			function decreaseApproval(addr...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      CALLER 			msg.sender
      DUP2 			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH 0			bool
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 1			allowed
      PUSH 20			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 40			allowed[msg.sender]
      DUP1 			allowed[msg.sender]
      DUP4 			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      SWAP4 			allowed[msg.sender][_spender]
      DUP7 			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP4 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP3 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      DUP1 			_subtractedValue > oldValue
      DUP4 			_subtractedValue > oldValue
      GT 			_subtractedValue > oldValue
      ISZERO 			if (_subtractedValue > oldValu...
      PUSH [tag] 187			if (_subtractedValue > oldValu...
      JUMPI 			if (_subtractedValue > oldValu...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      CALLER 			msg.sender
      DUP2 			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH 0			0
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 1			allowed
      PUSH 20			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 40			allowed[msg.sender]
      DUP1 			allowed[msg.sender]
      DUP4 			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      SWAP4 			allowed[msg.sender][_spender]
      DUP9 			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP4 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP3 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SSTORE 			allowed[msg.sender][_spender] ...
      PUSH [tag] 188			if (_subtractedValue > oldValu...
      JUMP 			if (_subtractedValue > oldValu...
    tag 187			if (_subtractedValue > oldValu...
      JUMPDEST 			if (_subtractedValue > oldValu...
      PUSH [tag] 189			oldValue.sub(_subtractedValue)
      DUP2 			oldValue
      DUP5 			_subtractedValue
      PUSH FFFFFFFF			oldValue.sub(_subtractedValue)
      PUSH [tag] 190			oldValue.sub
      AND 			oldValue.sub(_subtractedValue)
      JUMP [in]			oldValue.sub(_subtractedValue)
    tag 189			oldValue.sub(_subtractedValue)
      JUMPDEST 			oldValue.sub(_subtractedValue)
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      CALLER 			msg.sender
      DUP2 			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 1			allowed
      PUSH 20			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 40			allowed[msg.sender]
      DUP1 			allowed[msg.sender]
      DUP4 			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      SWAP4 			allowed[msg.sender][_spender]
      DUP10 			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP4 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP3 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SSTORE 			allowed[msg.sender][_spender] ...
    tag 188			if (_subtractedValue > oldValu...
      JUMPDEST 			if (_subtractedValue > oldValu...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      CALLER 			msg.sender
      DUP2 			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      PUSH 0			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 1			allowed
      PUSH 20			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 40			allowed[msg.sender]
      DUP1 			allowed[msg.sender]
      DUP4 			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      SWAP5 			Approval(msg.sender, _spender,...
      DUP10 			Approval(msg.sender, _spender,...
      AND 			Approval(msg.sender, _spender,...
      DUP1 			allowed[msg.sender][_spender]
      DUP5 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP5 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      SWAP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      DUP2 			Approval(msg.sender, _spender,...
      MSTORE 			Approval(msg.sender, _spender,...
      PUSH 20			Approval(msg.sender, _spender,...
      ADD 			Approval(msg.sender, _spender,...
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SUB 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      LOG3 			Approval(msg.sender, _spender,...
      POP 			
      PUSH 1			true
      SWAP4 			true
      SWAP3 			function decreaseApproval(addr...
      POP 			
      POP 			
      POP 			
      JUMP [out]			function decreaseApproval(addr...
    tag 166			function increaseApproval(addr...
      JUMPDEST 			function increaseApproval(addr...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      CALLER 			msg.sender
      DUP2 			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH 0			bool
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 1			allowed
      PUSH 20			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 40			allowed[msg.sender]
      DUP1 			allowed[msg.sender]
      DUP4 			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      SWAP4 			allowed[msg.sender][_spender]
      DUP7 			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP4 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP3 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      SLOAD 			allowed[msg.sender][_spender]
      PUSH [tag] 192			allowed[msg.sender][_spender]....
      SWAP1 			allowed[msg.sender][_spender]....
      DUP4 			_addedValue
      PUSH FFFFFFFF			allowed[msg.sender][_spender]....
      PUSH [tag] 193			allowed[msg.sender][_spender]....
      AND 			allowed[msg.sender][_spender]....
      JUMP [in]			allowed[msg.sender][_spender]....
    tag 192			allowed[msg.sender][_spender]....
      JUMPDEST 			allowed[msg.sender][_spender]....
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      CALLER 			msg.sender
      DUP2 			allowed[msg.sender]
      AND 			allowed[msg.sender]
      PUSH 0			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 1			allowed
      PUSH 20			allowed[msg.sender]
      SWAP1 			allowed[msg.sender]
      DUP2 			allowed[msg.sender]
      MSTORE 			allowed[msg.sender]
      PUSH 40			allowed[msg.sender]
      DUP1 			allowed[msg.sender]
      DUP4 			allowed[msg.sender]
      KECCAK256 			allowed[msg.sender]
      SWAP5 			allowed[msg.sender][_spender]
      DUP10 			allowed[msg.sender][_spender]
      AND 			allowed[msg.sender][_spender]
      DUP1 			allowed[msg.sender][_spender]
      DUP5 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP5 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      SWAP2 			allowed[msg.sender][_spender]
      MSTORE 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      DUP2 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender][_spender]
      KECCAK256 			allowed[msg.sender][_spender]
      DUP5 			allowed[msg.sender][_spender] ...
      SWAP1 			allowed[msg.sender][_spender] ...
      SSTORE 			allowed[msg.sender][_spender] ...
      SWAP2 			allowed[msg.sender][_spender]
      SWAP3 			allowed[msg.sender][_spender]
      SWAP1 			allowed[msg.sender]
      SWAP2 			allowed[msg.sender]
      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SWAP1 			allowed[msg.sender][_spender] ...
      MLOAD 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      DUP2 			Approval(msg.sender, _spender,...
      MSTORE 			Approval(msg.sender, _spender,...
      PUSH 20			Approval(msg.sender, _spender,...
      ADD 			Approval(msg.sender, _spender,...
      PUSH 40			Approval(msg.sender, _spender,...
      MLOAD 			Approval(msg.sender, _spender,...
      DUP1 			Approval(msg.sender, _spender,...
      SWAP2 			Approval(msg.sender, _spender,...
      SUB 			Approval(msg.sender, _spender,...
      SWAP1 			Approval(msg.sender, _spender,...
      LOG3 			Approval(msg.sender, _spender,...
      POP 			
      PUSH 1			true
      SWAP3 			function increaseApproval(addr...
      SWAP2 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      POP 			function increaseApproval(addr...
      JUMP [out]			function increaseApproval(addr...
    tag 179			function transferFrom(address ...
      JUMPDEST 			function transferFrom(address ...
      PUSH 0			bool
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP4 			_to != address(0)
      AND 			_to != address(0)
      ISZERO 			_to != address(0)
      ISZERO 			_to != address(0)
      PUSH [tag] 195			require(_to != address(0))
      JUMPI 			require(_to != address(0))
      PUSH 0			require(_to != address(0))
      DUP1 			require(_to != address(0))
      REVERT 			require(_to != address(0))
    tag 195			require(_to != address(0))
      JUMPDEST 			require(_to != address(0))
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP5 			balances[_from]
      AND 			balances[_from]
      PUSH 0			balances
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      DUP2 			balances[_from]
      SWAP1 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 40			balances[_from]
      SWAP1 			balances[_from]
      KECCAK256 			balances[_from]
      SLOAD 			balances[_from]
      DUP3 			_value <= balances[_from]
      GT 			_value <= balances[_from]
      ISZERO 			_value <= balances[_from]
      PUSH [tag] 196			require(_value <= balances[_fr...
      JUMPI 			require(_value <= balances[_fr...
      PUSH 0			require(_value <= balances[_fr...
      DUP1 			require(_value <= balances[_fr...
      REVERT 			require(_value <= balances[_fr...
    tag 196			require(_value <= balances[_fr...
      JUMPDEST 			require(_value <= balances[_fr...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP1 			allowed[_from]
      DUP6 			allowed[_from]
      AND 			allowed[_from]
      PUSH 0			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 1			allowed
      PUSH 20			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 40			allowed[_from]
      DUP1 			allowed[_from]
      DUP4 			allowed[_from]
      KECCAK256 			allowed[_from]
      CALLER 			msg.sender
      SWAP1 			allowed[_from][msg.sender]
      SWAP5 			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP4 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      SWAP3 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      SLOAD 			allowed[_from][msg.sender]
      DUP3 			_value <= allowed[_from][msg.s...
      GT 			_value <= allowed[_from][msg.s...
      ISZERO 			_value <= allowed[_from][msg.s...
      PUSH [tag] 197			require(_value <= allowed[_fro...
      JUMPI 			require(_value <= allowed[_fro...
      PUSH 0			require(_value <= allowed[_fro...
      DUP1 			require(_value <= allowed[_fro...
      REVERT 			require(_value <= allowed[_fro...
    tag 197			require(_value <= allowed[_fro...
      JUMPDEST 			require(_value <= allowed[_fro...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP5 			balances[_from]
      AND 			balances[_from]
      PUSH 0			balances
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      DUP2 			balances[_from]
      SWAP1 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 40			balances[_from]
      SWAP1 			balances[_from]
      KECCAK256 			balances[_from]
      SLOAD 			balances[_from]
      PUSH [tag] 198			balances[_from].sub(_value)
      SWAP1 			balances[_from].sub(_value)
      DUP4 			_value
      PUSH FFFFFFFF			balances[_from].sub(_value)
      PUSH [tag] 190			balances[_from].sub
      AND 			balances[_from].sub(_value)
      JUMP [in]			balances[_from].sub(_value)
    tag 198			balances[_from].sub(_value)
      JUMPDEST 			balances[_from].sub(_value)
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP1 			balances[_from]
      DUP7 			balances[_from]
      AND 			balances[_from]
      PUSH 0			balances
      SWAP1 			balances[_from]
      DUP2 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 20			balances[_from]
      DUP2 			balances[_from]
      SWAP1 			balances[_from]
      MSTORE 			balances[_from]
      PUSH 40			balances[_from]
      DUP1 			balances[_from]
      DUP3 			balances[_from]
      KECCAK256 			balances[_from]
      SWAP4 			balances[_from] = balances[_fr...
      SWAP1 			balances[_from] = balances[_fr...
      SWAP4 			balances[_from] = balances[_fr...
      SSTORE 			balances[_from] = balances[_fr...
      SWAP1 			balances[_to]
      DUP6 			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 199			balances[_to].add(_value)
      SWAP1 			balances[_to].add(_value)
      DUP4 			_value
      PUSH FFFFFFFF			balances[_to].add(_value)
      PUSH [tag] 193			balances[_to].add
      AND 			balances[_to].add(_value)
      JUMP [in]			balances[_to].add(_value)
    tag 199			balances[_to].add(_value)
      JUMPDEST 			balances[_to].add(_value)
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP1 			balances[_to]
      DUP6 			balances[_to]
      AND 			balances[_to]
      PUSH 0			balances
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      DUP2 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 40			balances[_to]
      DUP1 			balances[_to]
      DUP4 			balances[_to]
      KECCAK256 			balances[_to]
      SWAP5 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SWAP5 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      DUP8 			allowed[_from]
      DUP4 			allowed[_from]
      AND 			allowed[_from]
      DUP3 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 1			allowed
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      DUP4 			allowed[_from]
      DUP3 			allowed[_from]
      KECCAK256 			allowed[_from]
      CALLER 			msg.sender
      SWAP1 			allowed[_from][msg.sender]
      SWAP4 			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP3 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      SWAP2 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      SWAP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      SLOAD 			allowed[_from][msg.sender]
      PUSH [tag] 200			allowed[_from][msg.sender].sub...
      SWAP1 			allowed[_from][msg.sender].sub...
      DUP4 			_value
      PUSH FFFFFFFF			allowed[_from][msg.sender].sub...
      PUSH [tag] 190			allowed[_from][msg.sender].sub
      AND 			allowed[_from][msg.sender].sub...
      JUMP [in]			allowed[_from][msg.sender].sub...
    tag 200			allowed[_from][msg.sender].sub...
      JUMPDEST 			allowed[_from][msg.sender].sub...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP1 			allowed[_from]
      DUP7 			allowed[_from]
      AND 			allowed[_from]
      PUSH 0			allowed[_from]
      DUP2 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 1			allowed
      PUSH 20			allowed[_from]
      SWAP1 			allowed[_from]
      DUP2 			allowed[_from]
      MSTORE 			allowed[_from]
      PUSH 40			allowed[_from]
      DUP1 			allowed[_from]
      DUP4 			allowed[_from]
      KECCAK256 			allowed[_from]
      CALLER 			msg.sender
      DUP7 			allowed[_from][msg.sender]
      AND 			allowed[_from][msg.sender]
      DUP5 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      SWAP2 			allowed[_from][msg.sender]
      MSTORE 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      DUP2 			allowed[_from][msg.sender]
      SWAP1 			allowed[_from][msg.sender]
      KECCAK256 			allowed[_from][msg.sender]
      SWAP4 			allowed[_from][msg.sender] = a...
      SWAP1 			allowed[_from][msg.sender] = a...
      SWAP4 			allowed[_from][msg.sender] = a...
      SSTORE 			allowed[_from][msg.sender] = a...
      SWAP1 			Transfer(_from, _to, _value)
      DUP6 			Transfer(_from, _to, _value)
      AND 			Transfer(_from, _to, _value)
      SWAP2 			Transfer(_from, _to, _value)
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(_from, _to, _value)
      SWAP1 			Transfer(_from, _to, _value)
      DUP6 			_value
      SWAP1 			_value
      MLOAD 			Transfer(_from, _to, _value)
      SWAP1 			Transfer(_from, _to, _value)
      DUP2 			Transfer(_from, _to, _value)
      MSTORE 			Transfer(_from, _to, _value)
      PUSH 20			Transfer(_from, _to, _value)
      ADD 			Transfer(_from, _to, _value)
      PUSH 40			Transfer(_from, _to, _value)
      MLOAD 			Transfer(_from, _to, _value)
      DUP1 			Transfer(_from, _to, _value)
      SWAP2 			Transfer(_from, _to, _value)
      SUB 			Transfer(_from, _to, _value)
      SWAP1 			Transfer(_from, _to, _value)
      LOG3 			Transfer(_from, _to, _value)
      POP 			
      PUSH 1			true
      SWAP4 			function transferFrom(address ...
      SWAP3 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      POP 			function transferFrom(address ...
      JUMP [out]			function transferFrom(address ...
    tag 185			function transfer(address _to,...
      JUMPDEST 			function transfer(address _to,...
      PUSH 0			bool
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      DUP4 			_to != address(0)
      AND 			_to != address(0)
      ISZERO 			_to != address(0)
      ISZERO 			_to != address(0)
      PUSH [tag] 202			require(_to != address(0))
      JUMPI 			require(_to != address(0))
      PUSH 0			require(_to != address(0))
      DUP1 			require(_to != address(0))
      REVERT 			require(_to != address(0))
    tag 202			require(_to != address(0))
      JUMPDEST 			require(_to != address(0))
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      CALLER 			msg.sender
      AND 			balances[msg.sender]
      PUSH 0			balances
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      DUP2 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 40			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      DUP3 			_value <= balances[msg.sender]
      GT 			_value <= balances[msg.sender]
      ISZERO 			_value <= balances[msg.sender]
      PUSH [tag] 203			require(_value <= balances[msg...
      JUMPI 			require(_value <= balances[msg...
      PUSH 0			require(_value <= balances[msg...
      DUP1 			require(_value <= balances[msg...
      REVERT 			require(_value <= balances[msg...
    tag 203			require(_value <= balances[msg...
      JUMPDEST 			require(_value <= balances[msg...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      CALLER 			msg.sender
      AND 			balances[msg.sender]
      PUSH 0			balances
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      DUP2 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 40			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SLOAD 			balances[msg.sender]
      PUSH [tag] 204			balances[msg.sender].sub(_valu...
      SWAP1 			balances[msg.sender].sub(_valu...
      DUP4 			_value
      PUSH FFFFFFFF			balances[msg.sender].sub(_valu...
      PUSH [tag] 190			balances[msg.sender].sub
      AND 			balances[msg.sender].sub(_valu...
      JUMP [in]			balances[msg.sender].sub(_valu...
    tag 204			balances[msg.sender].sub(_valu...
      JUMPDEST 			balances[msg.sender].sub(_valu...
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      CALLER 			msg.sender
      DUP2 			balances[msg.sender]
      AND 			balances[msg.sender]
      PUSH 0			balances
      SWAP1 			balances[msg.sender]
      DUP2 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 20			balances[msg.sender]
      DUP2 			balances[msg.sender]
      SWAP1 			balances[msg.sender]
      MSTORE 			balances[msg.sender]
      PUSH 40			balances[msg.sender]
      DUP1 			balances[msg.sender]
      DUP3 			balances[msg.sender]
      KECCAK256 			balances[msg.sender]
      SWAP4 			balances[msg.sender] = balance...
      SWAP1 			balances[msg.sender] = balance...
      SWAP4 			balances[msg.sender] = balance...
      SSTORE 			balances[msg.sender] = balance...
      SWAP1 			balances[_to]
      DUP6 			balances[_to]
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      KECCAK256 			balances[_to]
      SLOAD 			balances[_to]
      PUSH [tag] 205			balances[_to].add(_value)
      SWAP1 			balances[_to].add(_value)
      DUP4 			_value
      PUSH FFFFFFFF			balances[_to].add(_value)
      PUSH [tag] 193			balances[_to].add
      AND 			balances[_to].add(_value)
      JUMP [in]			balances[_to].add(_value)
    tag 205			balances[_to].add(_value)
      JUMPDEST 			balances[_to].add(_value)
      PUSH 0			balances
      DUP1 			balances[_to]
      DUP6 			_to
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			balances[_to]
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      SWAP1 			balances[_to]
      DUP2 			balances[_to]
      MSTORE 			balances[_to]
      PUSH 20			balances[_to]
      ADD 			balances[_to]
      PUSH 0			balances[_to]
      KECCAK256 			balances[_to]
      DUP2 			balances[_to] = balances[_to]....
      SWAP1 			balances[_to] = balances[_to]....
      SSTORE 			balances[_to] = balances[_to]....
      POP 			balances[_to] = balances[_to]....
      DUP3 			_to
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			Transfer(msg.sender, _to, _val...
      CALLER 			msg.sender
      PUSH 1			
      PUSH A0			
      PUSH 2			
      EXP 			
      SUB 			
      AND 			Transfer(msg.sender, _to, _val...
      PUSH DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF			Transfer(msg.sender, _to, _val...
      DUP5 			_value
      PUSH 40			Transfer(msg.sender, _to, _val...
      MLOAD 			Transfer(msg.sender, _to, _val...
      SWAP1 			Transfer(msg.sender, _to, _val...
      DUP2 			Transfer(msg.sender, _to, _val...
      MSTORE 			Transfer(msg.sender, _to, _val...
      PUSH 20			Transfer(msg.sender, _to, _val...
      ADD 			Transfer(msg.sender, _to, _val...
      PUSH 40			Transfer(msg.sender, _to, _val...
      MLOAD 			Transfer(msg.sender, _to, _val...
      DUP1 			Transfer(msg.sender, _to, _val...
      SWAP2 			Transfer(msg.sender, _to, _val...
      SUB 			Transfer(msg.sender, _to, _val...
      SWAP1 			Transfer(msg.sender, _to, _val...
      LOG3 			Transfer(msg.sender, _to, _val...
      POP 			
      PUSH 1			true
      SWAP3 			function transfer(address _to,...
      SWAP2 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      POP 			function transfer(address _to,...
      JUMP [out]			function transfer(address _to,...
    tag 190			function sub(uint256 a, uint25...
      JUMPDEST 			function sub(uint256 a, uint25...
      PUSH 0			uint256
      DUP3 			b <= a
      DUP3 			b <= a
      GT 			b <= a
      ISZERO 			b <= a
      PUSH [tag] 207			assert(b <= a)
      JUMPI 			assert(b <= a)
      INVALID 			assert(b <= a)
    tag 207			assert(b <= a)
      JUMPDEST 			assert(b <= a)
      POP 			
      SWAP1 			a - b
      SUB 			a - b
      SWAP1 			a - b
      JUMP [out]			function sub(uint256 a, uint25...
    tag 193			function add(uint256 a, uint25...
      JUMPDEST 			function add(uint256 a, uint25...
      PUSH 0			uint256
      DUP3 			a + b
      DUP3 			a + b
      ADD 			a + b
      DUP4 			c >= a
      DUP2 			c >= a
      LT 			c >= a
      ISZERO 			c >= a
      PUSH [tag] 105			assert(c >= a)
      JUMPI 			assert(c >= a)
      INVALID 			assert(c >= a)
    .data